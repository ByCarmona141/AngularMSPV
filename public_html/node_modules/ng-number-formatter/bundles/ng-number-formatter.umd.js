(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng-number-formatter', ['@angular/core','@angular/common','exports', '@angular/core', '@angular/common'], factory) :
    (factory(global.ng.core,global.ng.common,(global['ng-number-formatter'] = {}),global.ng.core,global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,exports,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var NgNumberFormatterComponent = (function () {
        function NgNumberFormatterComponent() {
        }
        /**
         * @return {?}
         */
        NgNumberFormatterComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var incomingNumber = this.ngNumber;
                this.ngNumber = this.nFormatter(Math.abs(parseInt(incomingNumber)), 1);
            };
        /**
         * @param {?} num
         * @param {?} digits
         * @return {?}
         */
        NgNumberFormatterComponent.prototype.nFormatter = /**
         * @param {?} num
         * @param {?} digits
         * @return {?}
         */
            function (num, digits) {
                /** @type {?} */
                var si = [
                    { value: 1E18, symbol: "E" },
                    { value: 1E15, symbol: "P" },
                    { value: 1E12, symbol: "T" },
                    { value: 1E9, symbol: "B" },
                    { value: 1E6, symbol: "M" },
                    { value: 1E3, symbol: "K" }
                ];
                /** @type {?} */
                var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
                /** @type {?} */
                var i;
                for (i = 0; i < si.length; i++) {
                    if (num >= si[i].value) {
                        return (num / si[i].value).toFixed(digits).replace(rx, "$1") + si[i].symbol;
                    }
                }
                return num.toFixed(digits).replace(rx, "$1");
            };
        /** @nocollapse */
        NgNumberFormatterComponent.ctorParameters = function () { return []; };
NgNumberFormatterComponent.ɵfac = function NgNumberFormatterComponent_Factory(t) { return new (t || NgNumberFormatterComponent)(); };
NgNumberFormatterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgNumberFormatterComponent, selectors: [["ng-number-formatter"]], inputs: { ngNumber: "ngNumber" }, decls: 2, vars: 1, template: function NgNumberFormatterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.ngNumber);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgNumberFormatterComponent, [{
        type: core.Component,
        args: [{
                selector: 'ng-number-formatter',
                inputs: ['ngNumber'],
                template: '<span>{{ngNumber}}</span>'
            }]
    }], function () { return []; }, null); })();
        return NgNumberFormatterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var NgNumberFormatterModule = (function () {
        function NgNumberFormatterModule() {
        }
NgNumberFormatterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgNumberFormatterModule });
NgNumberFormatterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgNumberFormatterModule_Factory(t) { return new (t || NgNumberFormatterModule)(); }, imports: [[
            common.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgNumberFormatterModule, { declarations: [NgNumberFormatterComponent], imports: [ɵngcc1.CommonModule], exports: [NgNumberFormatterComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgNumberFormatterModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule
                ],
                declarations: [
                    NgNumberFormatterComponent
                ],
                exports: [
                    NgNumberFormatterComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return NgNumberFormatterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    exports.NgNumberFormatterModule = NgNumberFormatterModule;
    exports.ɵa = NgNumberFormatterComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctbnVtYmVyLWZvcm1hdHRlci51bWQuanMiLCJzb3VyY2VzIjpbIm5nLW51bWJlci1mb3JtYXR0ZXIvc3JjL2FwcC9tb2R1bGVzL25nLW51bWJlci1mb3JtYXR0ZXIvbmctbnVtYmVyLWZvcm1hdHRlci5jb21wb25lbnQudHMiLCJuZy1udW1iZXItZm9ybWF0dGVyL3NyYy9hcHAvbW9kdWxlcy9uZy1udW1iZXItZm9ybWF0dGVyL25nLW51bWJlci1mb3JtYXR0ZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbIkNvbXBvbmVudCIsIk5nTW9kdWxlIiwiQ29tbW9uTW9kdWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFFQSxRQVFFO0FBR0ksU0FIYTtBQUNuQjtBQUNXO0FBQ1E7QUFBWSxRQUQ3Qiw2Q0FBUTtBQUNSO0FBQXVCO0FBQVksWUFEbkM7QUFDRDtBQUFpQyxnQkFBOUIsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUN2QyxnQkFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM1RSxhQUFHO0FBRUg7QUFBWTtBQUNGO0FBQ2M7QUFDYjtBQUFZLFFBSHJCLCtDQUFVO0FBQU87QUFFakI7QUFBNkI7QUFDYjtBQUFZLFlBSDVCLFVBQVcsR0FBRyxFQUFFLE1BQU07QUFDeEI7QUFDa0IsZ0JBRGQsSUFBSSxFQUFFLEdBQUc7QUFDYixvQkFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtBQUNsQyxvQkFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtBQUNsQyxvQkFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtBQUNsQyxvQkFBTSxFQUFFLEtBQUssRUFBRSxHQUFH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LEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQTlCQUYsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBTkEsQUNBQSxBQUlBQyxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQUMsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFkQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLW51bWJlci1mb3JtYXR0ZXInLFxuICBpbnB1dHM6IFsnbmdOdW1iZXInXSxcbiAgdGVtcGxhdGU6ICc8c3Bhbj57e25nTnVtYmVyfX08L3NwYW4+Jyxcbn0pXG5leHBvcnQgY2xhc3MgTmdOdW1iZXJGb3JtYXR0ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBuZ051bWJlcjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdmFyIGluY29taW5nTnVtYmVyID0gdGhpcy5uZ051bWJlcjtcbiAgICB0aGlzLm5nTnVtYmVyID0gdGhpcy5uRm9ybWF0dGVyKCBNYXRoLmFicyhwYXJzZUludChpbmNvbWluZ051bWJlcikpLCAxKTtcbiAgfVxuXG4gIG5Gb3JtYXR0ZXIobnVtLCBkaWdpdHMpIHtcbiAgICB2YXIgc2kgPSBbXG4gICAgICB7IHZhbHVlOiAxRTE4LCBzeW1ib2w6IFwiRVwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTE1LCBzeW1ib2w6IFwiUFwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTEyLCBzeW1ib2w6IFwiVFwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTksICBzeW1ib2w6IFwiQlwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTYsICBzeW1ib2w6IFwiTVwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTMsICBzeW1ib2w6IFwiS1wiIH1cbiAgICBdLCByeCA9IC9cXC4wKyR8KFxcLlswLTldKlsxLTldKTArJC8sIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IHNpLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobnVtID49IHNpW2ldLnZhbHVlKSB7XG4gICAgICAgIHJldHVybiAobnVtIC8gc2lbaV0udmFsdWUpLnRvRml4ZWQoZGlnaXRzKS5yZXBsYWNlKHJ4LCBcIiQxXCIpICsgc2lbaV0uc3ltYm9sO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVtLnRvRml4ZWQoZGlnaXRzKS5yZXBsYWNlKHJ4LCBcIiQxXCIpO1xuICB9XG5cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdOdW1iZXJGb3JtYXR0ZXJDb21wb25lbnQgfSBmcm9tICcuL25nLW51bWJlci1mb3JtYXR0ZXIuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBOZ051bWJlckZvcm1hdHRlckNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTmdOdW1iZXJGb3JtYXR0ZXJDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ051bWJlckZvcm1hdHRlck1vZHVsZSB7IH1cbiJdfQ==