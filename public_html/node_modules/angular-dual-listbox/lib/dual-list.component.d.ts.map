{"version":3,"file":"dual-list.component.d.ts","sources":["dual-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DoCheck, EventEmitter, IterableDiffers, OnChanges, SimpleChange } from '@angular/core';\nimport { BasicList } from './basic-list';\nexport declare type compareFunction = (a: any, b: any) => number;\nexport declare class DualListComponent implements DoCheck, OnChanges {\n    private differs;\n    static AVAILABLE_LIST_NAME: string;\n    static CONFIRMED_LIST_NAME: string;\n    static LTR: string;\n    static RTL: string;\n    static DEFAULT_FORMAT: {\n        add: string;\n        remove: string;\n        all: string;\n        none: string;\n        direction: string;\n        draggable: boolean;\n        locale: any;\n    };\n    id: string;\n    key: string;\n    display: any;\n    height: string;\n    filter: boolean;\n    format: {\n        add: string;\n        remove: string;\n        all: string;\n        none: string;\n        direction: string;\n        draggable: boolean;\n        locale: any;\n    };\n    sort: boolean;\n    compare: compareFunction;\n    disabled: boolean;\n    source: Array<any>;\n    destination: Array<any>;\n    destinationChange: EventEmitter<any>;\n    available: BasicList;\n    confirmed: BasicList;\n    sourceDiffer: any;\n    destinationDiffer: any;\n    private sorter;\n    constructor(differs: IterableDiffers);\n    ngOnChanges(changeRecord: {\n        [key: string]: SimpleChange;\n    }): void;\n    ngDoCheck(): void;\n    buildAvailable(source: Array<any>): boolean;\n    buildConfirmed(destination: Array<any>): boolean;\n    updatedSource(): void;\n    updatedDestination(): void;\n    direction(): boolean;\n    dragEnd(list?: BasicList): boolean;\n    drag(event: DragEvent, item: any, list: BasicList): void;\n    allowDrop(event: DragEvent, list: BasicList): boolean;\n    dragLeave(): void;\n    drop(event: DragEvent, list: BasicList): void;\n    private trueUp;\n    findItemIndex(list: Array<any>, item: any, key?: any): number;\n    private makeUnavailable;\n    moveItem(source: BasicList, target: BasicList, item?: any, trueup?: boolean): void;\n    isItemSelected(list: Array<any>, item: any): boolean;\n    shiftClick(event: MouseEvent, index: number, source: BasicList, item: any): void;\n    selectItem(list: Array<any>, item: any): void;\n    selectAll(source: BasicList): void;\n    selectNone(source: BasicList): void;\n    isAllSelected(source: BasicList): boolean;\n    isAnySelected(source: BasicList): boolean;\n    private unpick;\n    clearFilter(source: BasicList): void;\n    onFilter(source: BasicList): void;\n    private makeId;\n    protected makeName(item: any, separator?: string): string;\n}\n"]}