import { __decorate, __read, __spread } from "tslib";
import { ErrorHandler, Injectable, isDevMode } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var OwlLogger = /** @class */ (function () {
    function OwlLogger(errorHandler) {
        this.errorHandler = errorHandler;
    }
    OwlLogger.prototype.log = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        if (isDevMode()) {
            console.log.apply(console, __spread([value], rest));
        }
    };
    OwlLogger.prototype.error = function (error) {
        this.errorHandler.handleError(error);
    };
    OwlLogger.prototype.warn = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        console.warn.apply(console, __spread([value], rest));
    };
    OwlLogger.ctorParameters = function () { return [
        { type: ErrorHandler }
    ]; };
OwlLogger.ɵfac = function OwlLogger_Factory(t) { return new (t || OwlLogger)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };
OwlLogger.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OwlLogger, factory: function (t) { return OwlLogger.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OwlLogger, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.ErrorHandler }]; }, null); })();
    return OwlLogger;
}());
export { OwlLogger };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5neC1vd2wtY2Fyb3VzZWwtby9saWIvc2VydmljZXMvbG9nZ2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHcEU7QUFFbUIsSUFBakIsbUJBQW9CLFlBQTBCO0FBQUksUUFBOUIsaUJBQVksR0FBWixZQUFZLENBQWM7QUFBQyxJQUFFLENBQUM7QUFDcEQsSUFDRSx1QkFBRyxHQUFILFVBQUksS0FBVTtBQUFJLFFBQUYsY0FBYztBQUFDLGFBQWYsVUFBYyxFQUFkLHFCQUFjLEVBQWQsSUFBYztBQUNoQyxZQURrQiw2QkFBYztBQUFDO0FBQzFCLFFBQUgsSUFBSSxTQUFTLEVBQUUsRUFBRTtBQUNyQixZQUFNLE9BQU8sQ0FBQyxHQUFHLE9BQVgsT0FBTyxZQUFLLEtBQUssR0FBSyxJQUFJLEdBQUU7QUFDbEMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUVILElBQUUseUJBQUssR0FBTCxVQUFNLEtBQVk7QUFDcEIsUUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6QyxJQUFFLENBQUM7QUFFSCxJQUFFLHdCQUFJLEdBQUosVUFBSyxLQUFVO0FBQUksUUFBRixjQUFjO0FBQUMsYUFBZixVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO0FBQ2pDLFlBRG1CLDZCQUFjO0FBQUM7QUFDM0IsUUFBSCxPQUFPLENBQUMsSUFBSSxPQUFaLE9BQU8sWUFBTSxLQUFLLEdBQUssSUFBSSxHQUFFO0FBQ2pDLElBQUUsQ0FBQztBQUNGO0FBQ29ELGdCQWhCakIsWUFBWTtBQUFHO0lBRnRDLFNBQVMsd0JBRHJCLFVBQVUsRUFBRSxRQUNBLFNBQVMsQ0FpQnJCOzs7OzZFQUNEO0FBQUMsSUFERCxnQkFBQztBQUNBLENBREEsQUFqQkQsSUFpQkM7O0FBcEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQWRBLEFBQUEsQUFGQSxBQUFBLEFBREEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQWlCQSxBQUFBLEFBQUEsQUFBQSxBQWpCQSxBQWlCQSxBQWpCQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXJyb3JIYW5kbGVyLCBJbmplY3RhYmxlLCBpc0Rldk1vZGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE93bExvZ2dlciB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZXJyb3JIYW5kbGVyOiBFcnJvckhhbmRsZXIpIHt9XHJcblxyXG4gIGxvZyh2YWx1ZTogYW55LCAuLi5yZXN0OiBhbnlbXSkge1xyXG4gICAgaWYgKGlzRGV2TW9kZSgpKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHZhbHVlLCAuLi5yZXN0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGVycm9yKGVycm9yOiBFcnJvcikge1xyXG4gICAgdGhpcy5lcnJvckhhbmRsZXIuaGFuZGxlRXJyb3IoZXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgd2Fybih2YWx1ZTogYW55LCAuLi5yZXN0OiBhbnlbXSkge1xyXG4gICAgY29uc29sZS53YXJuKHZhbHVlLCAuLi5yZXN0KTtcclxuICB9XHJcbn1cclxuIl19