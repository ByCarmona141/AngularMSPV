{"version":3,"sources":["webpack:///src/app/module/login/components/login/login.component.ts","webpack:///src/app/module/login/components/login/login.component.html","webpack:///src/app/module/login/login-routing.module.ts","webpack:///src/app/module/login/login.module.ts"],"names":["LoginComponent","auth","router","builder","remember","error","login","isLogged","navigateByUrl","username","localStorage","getItem","signInForm","group","required","password","form","showLoading","valid","subscribe","resp","close","saveToken","token","setItem","removeItem","err","fire","userData","onSubmit","selector","templateUrl","styles","routes","path","component","pathMatch","redirectTo","LoginRoutingModule","forChild","imports","exports","LoginModule","declarations"],"mappings":"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","file":"module-login-login-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { systemName } from '../../../../../environments/environment';\nimport { Login } from '../../interfaces/login';\nimport Swal from 'sweetalert2';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styles: []\n})\nexport class LoginComponent implements OnInit {\n    signInForm: FormGroup;\n    remember = false;\n    error = false;\n    public userData: JSON;\n    login = false;\n\n    constructor(private auth: AuthService,\n                private router: Router,\n                private builder: FormBuilder) {\n        if (this.auth.isLogged()) {\n            this.router.navigateByUrl('/');\n        }\n    }\n\n    ngOnInit(): void {\n        let username = '';\n        if (localStorage.getItem(systemName + 'Remember')) {\n            this.remember = true;\n            username = localStorage.getItem(systemName + 'Remember');\n        }\n\n        this.signInForm = this.builder.group({\n            username: [username, Validators.required],\n            password: ['', Validators.required],\n            remember: [this.remember]\n        });\n    }\n\n    onSubmit(form: Login): void {\n        this.login = true;\n        Swal.showLoading();\n        if (this.signInForm.valid) {\n            this.auth.login(form).subscribe(resp => {\n                Swal.close();\n                this.login = false;\n                this.auth.saveToken(resp.token);\n                if (form.remember) {\n                    this.remember = form.remember;\n                    localStorage.setItem(systemName + 'Remember', form.username);\n                } else {\n                    localStorage.removeItem(systemName + 'Remember');\n                    this.remember = false;\n                }\n                this.router.navigateByUrl('/');\n            }, err => {\n                Swal.close();\n                this.login = false;\n                Swal.fire(\n                    'Error',\n                    'Usuario y/o contraseña incorrectos',\n                    'error'\n                );\n                this.error = true;\n            });\n        }\n    }\n\n    getUserData(): JSON {\n        return this.userData;\n    }\n}\n\n","<div class=\"auth-wrapper\" style=\"background: url('assets/system/fondo.png');\">\n  <div class=\"auth-content\">\n    <div class=\"card\">\n      <div class=\"row align-items-center text-center\">\n        <div class=\"col-md-12\">\n          <div class=\"card-body\">\n            <form [formGroup]=\"signInForm\" ngNativeValidate (ngSubmit)=\"onSubmit(signInForm.value)\">\n              <img src=\"assets/system/mspvlogo.png\" alt=\"\" class=\"img-fluid mb-4\">\n              <h4 class=\"mb-3 f-w-400\">Inicio de sesión</h4>\n              <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\"><i class=\"feather icon-user\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Usuario\" formControlName=\"username\"\n                       required/>\n              </div>\n              <div class=\"input-group mb-4\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\"><i class=\"feather icon-lock\"></i></span>\n                </div>\n                <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Contraseña\"\n                       formControlName=\"password\" required/>\n              </div>\n              <div class=\"form-group text-left mt-2\">\n                <div class=\"checkbox checkbox-primary d-inline\">\n                  <input type=\"checkbox\" name=\"rememberme\" id=\"checkbox-fill-a1\" formControlName=\"remember\"/>\n                  <label for=\"checkbox-fill-a1\" class=\"cr\"> Recordar</label>\n                </div>\n              </div>\n              <button class=\"btn btn-block btn-primary mb-4\" [disabled]=\"login\">Iniciar sesión</button>\n              <p class=\"mb-2 text-muted\">¿Olvidaste tu contraseña? <a [routerLink]=\"['/auth/reset-password']\"\n                                                                      class=\"f-w-400\">Reset</a></p>\n              <!--            <p class=\"mb-0 text-muted\">Don’t have an account? <a [routerLink]=\"['/auth/signup']\" class=\"f-w-400\">Signup</a></p>-->\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n    { path: '', component: LoginComponent },\n    { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        LoginRoutingModule,\n        ReactiveFormsModule\n    ]\n})\nexport class LoginModule {\n}\n"]}