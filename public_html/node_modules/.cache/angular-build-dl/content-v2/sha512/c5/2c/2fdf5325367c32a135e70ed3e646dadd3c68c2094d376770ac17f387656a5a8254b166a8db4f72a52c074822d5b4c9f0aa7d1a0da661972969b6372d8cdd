{"version":3,"sources":["webpack:///src/app/module/system-role/components/update/system-role-update.component.ts","webpack:///src/app/module/system-role/components/update/system-role-update.component.html","webpack:///src/app/module/system-role/system-role.module.ts","webpack:///src/app/module/system-role/system-role-routing.module.ts","webpack:///src/app/module/system-role/components/read/system-role-read.component.ts","webpack:///src/app/module/system-role/components/read/system-role-read.component.html","webpack:///src/app/module/system-role/components/create/system-role-create.component.ts","webpack:///src/app/module/system-role/components/create/system-role-create.component.html","webpack:///src/app/module/system-role/service/system-role.service.ts","webpack:///src/app/module/system-role/components/privileges/privileges.component.ts","webpack:///src/app/module/system-role/components/privileges/privileges.component.html","webpack:///src/app/module/system-role/interface/system-role-data-form.ts"],"names":["systemRoleUpdateComponent","activatedRoute","router","formBuilder","validators","activeModal","service","loading","register","modal","form","group","name","minLength","maxLength","active","id","data","subscribe","initForm","params","controls","setValue","values","valid","update","close","error","fire","title","type","text","then","console","log","markAllAsTouched","dismiss","navigate","submit","selector","templateUrl","styles","systemRoleModule","declarations","imports","routes","path","component","canActivate","privilege","pathMatch","redirectTo","systemRoleRoutingModule","forChild","exports","systemRoleReadComponent","auth","privilegesService","disabled","serveSource","serverFunction","selected","create","fields","getPrivileges","navigateByUrl","showCloseButton","showCancelButton","result","resp","table","refreshTable","ev","input","target","tagName","parentNode","classTag","className","includes","attributes","index","value","styleUrls","onClick","systemRoleCreateComponent","split","parseInt","length","message","systemRoleService","http","formData","headers","Authorization","localStorage","getItem","post","put","get","formValue","providedIn","PrivilegesComponent","load","rol","privilegesRole","forEach","item","addControl","array","privileges","push","control","Object","keys","key","setSystemRolePrivileges","formPrivilege","patchValue","checked","i","systemRoleDataForm","field","label"],"mappings":"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","file":"module-system-role-system-role-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemRoleService } from '../../service/system-role.service';\nimport { systemRole } from '../../interface/system-role';\nimport { systemRoleDataForm } from \"../../interface/system-role-data-form\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-system-role-update',\n  templateUrl: './system-role-update.component.html',\n  styles: []\n})\n\nexport class systemRoleUpdateComponent extends systemRoleDataForm implements OnInit {\n  form: FormGroup;\n  loading = true;\n  register = false;\n  @Input() modal = false;\n\n  @Input()\n  id: number;\n  data: systemRole;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemRoleService) {\n\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.minLength(1), Validators.maxLength(128)]],\n          active: [null, []]\n    });\n\n    if (typeof this.id !== \"undefined\") {\n      this.service.data(this.id).subscribe(data => this.initForm(data),\n          () => this.return);\n    } else {\n      this.activatedRoute.params.subscribe(params => {\n        this.id = params.id;\n        this.service.data(this.id).subscribe(data => this.initForm(data),\n            () => this.return);\n      });\n    }\n  }\n\n  initForm(data): void {\n    this.data = data;\n\n    this.form.controls.name.setValue(this.data.name);\n    this.form.controls.active.setValue(this.data.active);\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.update(values, this.id)\n        .subscribe(() => {\n          if (this.modal){\n            this.activeModal.close(this.id);\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error'\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n            });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemRole']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemRole\"\n                     [create]=\"false\" [id]=\"id\" (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n        <app-input-template [form]=\"form\" [data]=\"active\"></app-input-template>\n</app-create-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { systemRoleRoutingModule } from './system-role-routing.module';\nimport { systemRoleCreateComponent } from './components/create/system-role-create.component';\nimport { systemRoleReadComponent } from './components/read/system-role-read.component';\nimport { systemRoleUpdateComponent } from './components/update/system-role-update.component';\nimport { SharedModule } from '../../components/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrivilegesComponent } from './components/privileges/privileges.component';\n\n@NgModule({\n  declarations: [\n    systemRoleCreateComponent,\n    systemRoleReadComponent,\n    systemRoleUpdateComponent,\n      PrivilegesComponent\n  ],\n  imports: [\n    CommonModule,\n    systemRoleRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class systemRoleModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { systemRoleCreateComponent } from './components/create/system-role-create.component';\nimport { systemRoleReadComponent } from './components/read/system-role-read.component';\nimport { systemRoleUpdateComponent } from './components/update/system-role-update.component';\nimport { GuardService } from '../../services/guard.service';\nimport { PrivilegesComponent } from './components/privileges/privileges.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: systemRoleReadComponent, canActivate: [ GuardService ], data: { privilege: 4 }\n  },\n  { path: 'create',\n    component: systemRoleCreateComponent, canActivate: [ GuardService ], data: { privilege: 1 }\n  },\n  { path: 'update/:id',\n    component: systemRoleUpdateComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: 'privileges/:id',\n    component: PrivilegesComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class systemRoleRoutingModule { }\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { systemRoleService } from '../../service/system-role.service';\nimport { systemPrivilegesService } from '../../../system-privileges/service/system-privileges.service';\nimport { TableComponent } from '../../../../components/shared/table/table.component';\n\n@Component({\n  selector: 'app-system-role',\n  templateUrl: './system-role-read.component.html',\n  styleUrls: []\n})\nexport class systemRoleReadComponent implements OnInit {\n  disabled = true;\n  serveSource = 'systemRole';\n  serverFunction = 'readDataTable';\n  selected = [];\n  privilege = {\n    create: false,\n    update: false,\n    delete: false\n  };\n  params = {\n  };\n\n  fields = [\n    '#',\n    'Nombre',\n    'Activo',\n    'Privilegios'\n  ];\n\n  @ViewChild('table') table: TableComponent;\n\n  constructor(public auth: AuthService,\n              private router: Router,\n              private service: systemRoleService,\n              private privilegesService: systemPrivilegesService) {\n    this.privilegesService.getPrivileges('systemRole')\n      .subscribe(data => {\n        this.privilege = data;\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  update(id: number): void {\n    this.router.navigateByUrl('/systemRole/update/' + id);\n  }\n\n  delete(id: number): void {\n    Swal.fire({\n      title: `¿Estas seguro de eliminar el registro ${id}?`,\n      type: 'warning',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then((result) => {\n      if (!result.dismiss) {\n        this.service.delete(id).subscribe(resp => {\n            Swal.fire('Eliminado', 'El registro se elimino correctamente!', 'error');\n            this.table.refreshTable();\n          },\n          error => {\n            Swal.fire(\n              'ERROR!',\n              'Hubo un error al eliminar, intente de nuevo',\n              'error'\n            );\n          });\n      }\n    });\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(ev): void {\n    let input = ev.target;\n    if (input.tagName !== 'A') {\n      input = input.parentNode;\n    }\n\n    const classTag = input.className;\n\n    if (classTag.includes('edit')) {\n      this.update(input.attributes.index.value);\n    }\n\n    if (classTag.includes('delete')) {\n      this.delete(input.attributes.index.value);\n    }\n\n    if (classTag.includes('privileges')) {\n      this.router.navigateByUrl('/systemRole/privileges/' + input.attributes.index.value).then();\n    }\n  }\n}\n","<section class=\"card animated fadeIn\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2 text-left\">\n        <button class=\"btn btn-success\" routerLink=\"create\" *ngIf=\"privilege.create\">\n          <span>\n            <i class=\"fa fa-plus\"></i> Agregar\n          </span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-left\">\n        <button class=\"btn btn-warning\" *ngIf=\"privilege.update\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-pencil\"></i> Editar\n          </span>\n        </button>\n        <button class=\"btn btn-danger\" *ngIf=\"privilege.delete\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-trash\"></i> Eliminar\n          </span>\n        </button>\n      </div>\n    </div>\n      <app-table #table\n                 [serveSource]=\"serveSource\"\n                 [serveFunction]=\"serverFunction\"\n                 [params]=\"params\"\n                 [fields]=\"fields\">\n    </app-table>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemRoleDataForm } from \"../../interface/system-role-data-form\";\nimport { systemRoleService } from '../../service/system-role.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-system-role-create',\n  templateUrl: './system-role-create.component.html',\n  styles: []\n})\n\nexport class systemRoleCreateComponent extends systemRoleDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemRoleService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.minLength(1), Validators.maxLength(128)]],\n      active: [null, []]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemRole']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemRole\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"active\"></app-input-template>\n</app-create-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class systemRoleService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    create(formData: {}): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.post(`${ API_URL }api/systemRole`, formData, { headers });\n    }\n\n    update(formData: {}, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.put(`${ API_URL }api/systemRole/${ id }`, formData, { headers });\n    }\n\n    delete(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.delete(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    data(id): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    combo(): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/combo`, { headers });\n    }\n\n\n    privilegesRole(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }/privileges`, { headers });\n    }\n\n    setSystemRolePrivileges(formValue, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n\n        return this.http.post(`${ API_URL }api/systemRole/${ id }/privileges`, { formValue }, { headers });\n    }\n}\n","import { expressionType } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { systemRoleService } from '../../service/system-role.service';\n\n@Component({\n    selector: 'app-privileges',\n    templateUrl: './privileges.component.html',\n    styleUrls: ['./privileges.component.scss']\n})\nexport class PrivilegesComponent implements OnInit {\n    form: FormGroup;\n    load = true;\n    register = false;\n\n    id: number;\n    rol = '';\n    data: any;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private router: Router,\n                private formBuilder: FormBuilder,\n                private service: systemRoleService) {\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe(params => {\n            this.id = params.id;\n            this.form = this.formBuilder.group({});\n\n            this.service.privilegesRole(this.id)\n                .subscribe(resp => {\n                    this.data = resp;\n                    this.rol = resp.name;\n\n                    this.initForm();\n\n                    this.load = false;\n\n                }, error => this.router.navigateByUrl('/systemRole'));\n        });\n    }\n\n    initForm(): void {\n        //console.log(this.data);\n        this.data.privilegesRole.forEach(item => {\n            console.log(item);\n            console.log(this.form);\n            this.form.addControl(\n                item.id + '-' + item.name,\n                this.formBuilder.array([])\n            );\n\n            item.privileges.forEach(privilege => {\n                console.log(item.id + '-' + item.name);\n                // @ts-ignore\n                this.form.get(item.id + '-' + item.name).controls.push(\n                    this.formBuilder.control(privilege, [])\n                );\n            });\n        });\n    }\n\n    submit(): void {\n        this.register = true;\n\n        const formValue = [];\n        Object.keys(this.form.controls).forEach(key => {\n            const control = this.form.get(key);\n            const privileges = [];\n            // @ts-ignore\n            for (const item of control.controls) {\n                privileges.push(item.value);\n            }\n\n            formValue.push({\n                form: key,\n                privileges\n            });\n        });\n\n        if (this.form.valid) {\n            this.service.setSystemRolePrivileges(formValue, this.id)\n                .subscribe(() => {\n                    this.router.navigateByUrl('/systemRole');\n                    this.register = false;\n                }, error => {\n                    this.register = false;\n                });\n        } else {\n            Object.values(this.form.controls).forEach(control => control.markAllAsTouched());\n            this.register = false;\n        }\n    }\n\n    allPrivilegesForm(target: EventTarget, formPrivilege: string): void {\n        const input = target as HTMLInputElement;\n\n        // @ts-ignore\n        const controls = this.form.get(formPrivilege).controls;\n        controls.forEach(control => {\n            control.patchValue(input.checked);\n        });\n    }\n\n\n    allPrivilegesPrivilege(target: EventTarget, i: number): void {\n        const input = target as HTMLInputElement;\n\n        for (const key of Object.keys(this.form.controls)) {\n            const control = this.form.get(key);\n            // @ts-ignore\n            control.controls[i].patchValue(input.checked);\n        }\n    }\n\n    allPrivileges(target: EventTarget): void {\n        const input = target as HTMLInputElement;\n        for (const key of Object.keys(this.form.controls)) {\n            const control = this.form.get(key);\n\n            // @ts-ignore\n            control.controls.forEach(item => {\n                item.patchValue(input.checked);\n            });\n        }\n    }\n}\n","<section class=\"card animated fadeIn\">\n  <form class=\"form-horizontal\" autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <header class=\"card-header\" *ngIf=\"!load\">\n      <div class=\"card-actions\">\n        <a href=\"#\" class=\"card-action card-action-toggle\" data-card-toggle=\"\"></a>\n      </div>\n      <h2 class=\"card-title\">Privilegios del rol: {{ rol }}</h2>\n    </header>\n\n    <div class=\"card-body\">\n      <div *ngIf=\"load\">\n        <div class=\"row text-center animated fadeIn fast\">\n          <div class=\"col\">\n            <i class=\"fa fa-spinner fa-5x fa-spin\"></i>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"!load\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Descripción</th>\n              <th>Ruta</th>\n              <th title=\"Selecciona todos los privilegios\">\n                <div class=\"text-center\">\n                  <label>Todos los<br>privilegios<br>\n                    <input type=\"checkbox\" (change)=\"allPrivileges($event.target)\">\n                  </label>\n                </div>\n              </th>\n              <th *ngFor=\"let privilege of data.privileges; let i = index\" title=\"{{ privilege.description }}\">\n                <div class=\"text-center\">\n                  <label>{{ privilege.name }}<br>\n                    <input type=\"checkbox\" (change)=\"allPrivilegesPrivilege($event.target, i)\">\n                  </label>\n                </div>\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let formPrivilege of data.privilegesRole\">\n              <td>{{ formPrivilege.name }}</td>\n              <td>{{ formPrivilege.description }}</td>\n              <td>{{ formPrivilege.href }}</td>\n              <td>\n                <div class=\"text-center\">\n                  <input type=\"checkbox\"\n                         (change)=\"allPrivilegesForm($event.target, formPrivilege.id + '-' + formPrivilege.name)\">\n                </div>\n              </td>\n              <td *ngFor=\"let privilegeForm of form.get(formPrivilege.id + '-' + formPrivilege.name).controls\">\n                <div class=\"text-center\">\n                  <input type=\"checkbox\" [formControl]=\"privilegeForm\">\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"row justify-content-center\">\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"register\">\n          <i class=\"fa \" [ngClass]=\"{ 'fa-save' : !register, 'fa-spinner fa-spin' : register }\"></i>\n          Guardar\n        </button>\n        <button type=\"reset\" class=\"btn btn-danger ml-2\" [disabled]=\"register\" routerLink=\"CelaRol\">\n          <i class=\"fa fa-window-close\"></i> Cancelar\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { DataForm } from '../../../interfaces/data-form';\n\nexport abstract class systemRoleDataForm {\n\n    name: DataForm = {\n    field: 'name',\n    type: 'text',\n    label: 'Name',\n    message: 'Ingrese minimo 1 letra y maximo 128'\n  };\n  active: DataForm = {\n    field: 'active',\n    type: 'number',\n    label: 'Active',\n    message: 'Ingrese un numero'\n  };\n\n    protected constructor() {\n        \n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n"]}