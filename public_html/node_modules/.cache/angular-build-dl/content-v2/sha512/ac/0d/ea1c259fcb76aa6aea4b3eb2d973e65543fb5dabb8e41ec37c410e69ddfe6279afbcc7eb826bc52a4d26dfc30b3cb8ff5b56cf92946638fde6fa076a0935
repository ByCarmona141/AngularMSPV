{"version":3,"sources":["webpack:///src/app/module/cliente/interface/cliente-data-form.ts","webpack:///src/app/module/prospectacion/service/prospectacion.service.ts","webpack:///src/app/module/empleado/interface/empleado-data-form.ts","webpack:///src/app/module/cliente/components/create/cliente-create.component.ts","webpack:///src/app/module/cliente/components/create/cliente-create.component.html","webpack:///src/app/module/prospectacion/components/create/prospectacion-create.component.ts","webpack:///src/app/module/prospectacion/components/create/prospectacion-create.component.html","webpack:///src/app/module/cliente/service/cliente.service.ts","webpack:///src/app/module/empleado/service/empleado.service.ts","webpack:///src/app/module/empleado/components/create/empleado-create.component.ts","webpack:///src/app/module/empleado/components/create/empleado-create.component.html","webpack:///src/app/module/prospectacion/interface/prospectacion-data-form.ts"],"names":["ClienteDataForm","Nombre","field","type","label","message","NoCliente","Empresa","FechaTupla","UsuarioRegistro","Status","PaginaWeb","LimiteDeCredito","ProspectacionService","http","formData","headers","Authorization","localStorage","getItem","post","id","put","get","providedIn","EmpleadoDataForm","personaService","Clave","Persona","items","combo","empty","add","component","ClienteCreateComponent","router","formBuilder","validators","activeModal","service","register","loading","modal","form","group","minLength","maxLength","required","values","valid","create","subscribe","resp","split","parseInt","length","close","error","fire","title","text","then","console","log","markAllAsTouched","dismiss","navigate","submit","selector","templateUrl","styles","ProspectacionCreateComponent","clienteService","empleadoService","Cliente","FechaYHora","TipoDeServicio","DescripcionDelServicio","Usuario","Empleado","Canalizado","ClienteService","EmpleadoService","EmpleadoCreateComponent","ProspectacionDataForm"],"mappings":"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","file":"default~module-prospectacion-prospectacion-module~module-seguimiento-seguimiento-module-es5.js","sourcesContent":["import { DataForm } from '../../../interfaces/data-form';\n\nexport abstract class ClienteDataForm {\n\n    Nombre: DataForm = {\n    field: 'Nombre',\n    type: 'text',\n    label: 'Nombre',\n    message: 'Ingrese minimo 1 letra y maximo 256'\n  };\n  NoCliente: DataForm = {\n    field: 'NoCliente',\n    type: 'text',\n    label: 'No Cliente',\n    message: 'Ingrese minimo 1 letra y maximo 16'\n  };\n  Empresa: DataForm = {\n    field: 'Empresa',\n    type: 'number',\n    label: 'Empresa',\n    message: 'Ingrese un numero'\n  };\n  FechaTupla: DataForm = {\n    field: 'FechaTupla',\n    type: 'datetime-local',\n    label: 'Fecha Tupla',\n    message: 'Ingrese una fecha'\n  };\n  UsuarioRegistro: DataForm = {\n    field: 'UsuarioRegistro',\n    type: 'number',\n    label: 'Usuario Registró',\n    message: 'Ingrese un numero'\n  };\n  Status: DataForm = {\n    field: 'Status',\n    type: 'number',\n    label: 'Status',\n    message: 'Ingrese un numero'\n  };\n  PaginaWeb: DataForm = {\n    field: 'PaginaWeb',\n    type: 'number',\n    label: 'Pagina Web',\n    message: 'Ingrese un numero'\n  };\n  LimiteDeCredito: DataForm = {\n    field: 'LimiteDeCredito',\n    type: 'number',\n    label: 'Límite De Crédito',\n    message: 'Ingrese un numero'\n  };\n\n    protected constructor() {\n        \n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProspectacionService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/Prospectacion`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/Prospectacion/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/Prospectacion/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Prospectacion/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Prospectacion/combo`, { headers });\n  }\n}\n","import { DataForm } from '../../../interfaces/data-form';\nimport { PersonaService } from '../../persona/service/persona.service';\nimport { PersonaCreateComponent } from '../../persona/components/create/persona-create.component';\r\n\r\nexport abstract class EmpleadoDataForm {\r\n\r\n    Clave: DataForm = {\n    field: 'Clave',\n    type: 'text',\n    label: 'Clave',\n    message: 'Ingrese minimo 1 letra y maximo 16'\n  };\n  Persona: DataForm = {\n    field: 'Persona',\n    type: 'select',\n    label: 'Persona',\n    message: 'Ingrese un Persona'\n  };\r\n\r\n    protected constructor(personaService: PersonaService) {\r\n        this.Persona.items = personaService.combo();\n    this.Persona.empty = true;\n    this.Persona.add = true;\n    this.Persona.component = PersonaCreateComponent;\r\n    }\r\n\r\n    abstract submit(values): void;\r\n\r\n    abstract return(): void;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { ClienteDataForm } from \"../../interface/cliente-data-form\";\nimport { ClienteService } from '../../service/cliente.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-cliente-create',\n  templateUrl: './cliente-create.component.html',\n  styles: []\n})\n\nexport class ClienteCreateComponent extends ClienteDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: ClienteService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      Nombre: [null, [Validators.minLength(1), Validators.maxLength(256), Validators.required]],\n      NoCliente: [null, [Validators.minLength(1), Validators.maxLength(16), Validators.required]],\n      Empresa: [null, [Validators.required]],\n      FechaTupla: [null, [Validators.required]],\n      UsuarioRegistro: [null, [Validators.required]],\n      Status: [null, [Validators.required]],\n      PaginaWeb: [null, []],\n      LimiteDeCredito: [null, []]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/Cliente']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"Cliente\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"Nombre\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"NoCliente\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Empresa\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"FechaTupla\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"UsuarioRegistro\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Status\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"PaginaWeb\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"LimiteDeCredito\"></app-input-template>\n</app-create-template>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { ProspectacionDataForm } from \"../../interface/prospectacion-data-form\";\nimport { ProspectacionService } from '../../service/prospectacion.service';\nimport { ClienteService } from '../../../cliente/service/cliente.service';\nimport { EmpleadoService } from '../../../empleado/service/empleado.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-prospectacion-create',\n  templateUrl: './prospectacion-create.component.html',\n  styles: []\n})\n\nexport class ProspectacionCreateComponent extends ProspectacionDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: ProspectacionService,\n              private clienteService: ClienteService,\n              private empleadoService: EmpleadoService) {\n    super(clienteService,\n              empleadoService);\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      Cliente: [null, [Validators.required]],\n      FechaYHora: [null, [Validators.required]],\n      TipoDeServicio: [null, [Validators.required]],\n      DescripcionDelServicio: [null, [Validators.minLength(1), Validators.maxLength(65535), Validators.required]],\n      Usuario: [null, [Validators.required]],\n      Empleado: [null, [Validators.required]],\n      Status: [null, [Validators.required]],\n      Canalizado: [null, [Validators.required]]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/Prospectacion']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"Prospectacion\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"Cliente\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"FechaYHora\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"TipoDeServicio\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"DescripcionDelServicio\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Usuario\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Empleado\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Status\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Canalizado\"></app-input-template>\n</app-create-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/Cliente`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/Cliente/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/Cliente/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Cliente/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Cliente/combo`, { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadoService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/Empleado`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/Empleado/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/Empleado/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Empleado/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/Empleado/combo`, { headers });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { EmpleadoDataForm } from \"../../interface/empleado-data-form\";\nimport { EmpleadoService } from '../../service/empleado.service';\nimport { PersonaService } from '../../../persona/service/persona.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-empleado-create',\n  templateUrl: './empleado-create.component.html',\n  styles: []\n})\n\nexport class EmpleadoCreateComponent extends EmpleadoDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: EmpleadoService,\n              private personaService: PersonaService) {\n    super(personaService);\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      Clave: [null, [Validators.minLength(1), Validators.maxLength(16), Validators.required]],\n      Persona: [null, [Validators.required]]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/Empleado']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"Empleado\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"Clave\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Persona\"></app-input-template>\n</app-create-template>","import { DataForm } from '../../../interfaces/data-form';\nimport { ClienteService } from '../../cliente/service/cliente.service';\nimport { ClienteCreateComponent } from '../../cliente/components/create/cliente-create.component';\nimport { EmpleadoService } from '../../empleado/service/empleado.service';\nimport { EmpleadoCreateComponent } from '../../empleado/components/create/empleado-create.component';\n\nexport abstract class ProspectacionDataForm {\n\n    Cliente: DataForm = {\n    field: 'Cliente',\n    type: 'select',\n    label: 'Cliente',\n    message: 'Ingrese un Cliente'\n  };\n  FechaYHora: DataForm = {\n    field: 'FechaYHora',\n    type: 'datetime-local',\n    label: 'Fecha Y Hora',\n    message: 'Ingrese una fecha'\n  };\n  TipoDeServicio: DataForm = {\n    field: 'TipoDeServicio',\n    type: 'number',\n    label: 'Tipo De Servicio',\n    message: 'Ingrese un numero'\n  };\n  DescripcionDelServicio: DataForm = {\n    field: 'DescripcionDelServicio',\n    type: 'text',\n    label: 'Descripción Del Servicio',\n    message: 'Ingrese minimo 1 letra y maximo 65535'\n  };\n  Usuario: DataForm = {\n    field: 'Usuario',\n    type: 'number',\n    label: 'Usuario',\n    message: 'Ingrese un numero'\n  };\n  Empleado: DataForm = {\n    field: 'Empleado',\n    type: 'select',\n    label: 'Empleado',\n    message: 'Ingrese un Empleado'\n  };\n  Status: DataForm = {\n    field: 'Status',\n    type: 'number',\n    label: 'Status',\n    message: 'Ingrese un numero'\n  };\n  Canalizado: DataForm = {\n    field: 'Canalizado',\n    type: 'number',\n    label: 'Canalizado',\n    message: 'Ingrese un numero'\n  };\n\n    protected constructor(clienteService: ClienteService,\n              empleadoService: EmpleadoService) {\n        this.Cliente.items = clienteService.combo();\n    this.Cliente.empty = true;\n    this.Cliente.add = true;\n    this.Cliente.component = ClienteCreateComponent;\n    this.Empleado.items = empleadoService.combo();\n    this.Empleado.empty = true;\n    this.Empleado.add = true;\n    this.Empleado.component = EmpleadoCreateComponent;\n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n"]}