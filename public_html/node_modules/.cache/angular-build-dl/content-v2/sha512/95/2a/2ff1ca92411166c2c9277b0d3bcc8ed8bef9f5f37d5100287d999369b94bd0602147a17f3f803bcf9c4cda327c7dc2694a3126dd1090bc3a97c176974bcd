{"version":3,"sources":["webpack:///src/app/module/system-menu/components/update/system-menu-update.component.ts","webpack:///src/app/module/system-menu/components/update/system-menu-update.component.html","webpack:///src/app/module/system-menu/components/read/system-menu-read.component.ts","webpack:///src/app/module/system-menu/components/read/system-menu-read.component.html","webpack:///src/app/module/system-menu/components/create/system-menu-create.component.ts","webpack:///src/app/module/system-menu/components/create/system-menu-create.component.html","webpack:///src/app/module/system-menu/system-menu.module.ts","webpack:///src/app/module/system-menu/service/system-menu.service.ts","webpack:///src/app/module/system-menu/system-menu-routing.module.ts","webpack:///src/app/module/system-menu/interface/system-menu-data-form.ts","webpack:///src/app/module/system-role/service/system-role.service.ts"],"names":["systemMenuUpdateComponent","activatedRoute","router","formBuilder","validators","activeModal","service","systemIconService","systemTypeElementService","systemRoleService","loading","register","modal","form","group","name","minLength","maxLength","description","href","idSystemIcon","category","priority","idSystemTypeElement","roles","id","data","subscribe","initForm","params","controls","setValue","values","valid","update","close","error","fire","title","type","text","then","console","log","markAllAsTouched","dismiss","navigate","submit","selector","templateUrl","styles","systemMenuReadComponent","auth","privilegesService","disabled","serveSource","serverFunction","selected","privilege","create","fields","getPrivileges","navigateByUrl","showCloseButton","showCancelButton","result","resp","table","refreshTable","ev","input","target","tagName","parentNode","classTag","className","includes","attributes","index","value","styleUrls","onClick","systemMenuCreateComponent","split","parseInt","length","message","systemMenuModule","declarations","imports","systemMenuService","http","formData","headers","Authorization","localStorage","getItem","post","put","get","providedIn","routes","path","component","canActivate","pathMatch","redirectTo","systemMenuRoutingModule","forChild","exports","systemMenuDataForm","field","label","multiple","items","combo","empty","add","icon","emptyMessage","formValue"],"mappings":"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","file":"module-system-menu-system-menu-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemMenuService } from '../../service/system-menu.service';\nimport { systemIconService } from '../../../system-icon/service/system-icon.service';\nimport { systemTypeElementService } from '../../../system-type-element/service/system-type-element.service';\nimport { systemRoleService } from '../../../system-role/service/system-role.service';\nimport { systemMenu } from '../../interface/system-menu';\nimport { systemMenuDataForm } from '../../interface/system-menu-data-form';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\n\n@Component({\n    selector: 'app-system-menu-update',\n    templateUrl: './system-menu-update.component.html',\n    styles: []\n})\n\nexport class systemMenuUpdateComponent extends systemMenuDataForm implements OnInit {\n    form: FormGroup;\n    loading = true;\n    register = false;\n    @Input() modal = false;\n\n    @Input()\n    id: number;\n    data: systemMenu;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private router: Router,\n                private formBuilder: FormBuilder,\n                private validators: ValidatorsService,\n                private activeModal: NgbActiveModal,\n                private service: systemMenuService,\n                private systemIconService: systemIconService,\n                private systemTypeElementService: systemTypeElementService,\n                private systemRoleService: systemRoleService) {\n\n        super(service,\n            systemIconService,\n            systemTypeElementService,\n            systemRoleService);\n    }\n\n    ngOnInit(): void {\n        this.form = this.formBuilder.group({\n            name: [null, [Validators.minLength(1), Validators.maxLength(32)]],\n            description: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n            href: [null, [Validators.minLength(1), Validators.maxLength(256)]],\n            idSystemIcon: [null, []],\n            category: [null, []],\n            priority: [null, []],\n            idSystemTypeElement: [null, []],\n            roles: [null, []]\n        });\n\n        if (typeof this.id !== 'undefined') {\n            this.service.data(this.id).subscribe(data => this.initForm(data),\n                () => this.return);\n        } else {\n            this.activatedRoute.params.subscribe(params => {\n                this.id = params.id;\n                this.service.data(this.id).subscribe(data => this.initForm(data),\n                    () => this.return);\n            });\n        }\n    }\n\n    initForm(data): void {\n        this.data = data;\n\n        this.form.controls.name.setValue(this.data.name);\n        this.form.controls.description.setValue(this.data.description);\n        this.form.controls.href.setValue(this.data.href);\n        this.form.controls.idSystemIcon.setValue(this.data.idSystemIcon);\n        this.form.controls.category.setValue(this.data.category);\n        this.form.controls.priority.setValue(this.data.priority);\n        this.form.controls.idSystemTypeElement.setValue(this.data.idSystemTypeElement);\n\n        this.loading = false;\n    }\n\n    submit(values): void {\n        this.register = true;\n        if (this.form.valid) {\n            this.service.update(values, this.id)\n                .subscribe(() => {\n                    if (this.modal) {\n                        this.activeModal.close(this.id);\n                    }\n                    this.return();\n                    this.register = false;\n                }, error => {\n                    Swal.fire({\n                        title: 'Error',\n                        type: 'error',\n                        text: 'Ocurrió un error'\n                    }).then(() => {\n                        console.log(error);\n                        this.register = false;\n                    });\n                });\n        } else {\n            this.form.markAllAsTouched();\n            this.register = false;\n        }\n    }\n\n    return(): void {\n        if (this.modal) {\n            this.activeModal.dismiss('cancel');\n            return;\n        }\n        this.router.navigate(['/systemMenu']).then();\n    }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemMenu\"\n                     [create]=\"false\" [id]=\"id\" (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"idSystemTypeElement\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"description\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"href\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"idSystemIcon\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"category\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"priority\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"roles\"></app-input-template>\n</app-create-template>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { systemMenuService } from '../../service/system-menu.service';\nimport { systemPrivilegesService } from '../../../system-privileges/service/system-privileges.service';\nimport { TableComponent } from '../../../../components/shared/table/table.component';\n\n@Component({\n  selector: 'app-system-menu',\n  templateUrl: './system-menu-read.component.html',\n  styleUrls: []\n})\nexport class systemMenuReadComponent implements OnInit {\n  disabled = true;\n  serveSource = 'systemMenu';\n  serverFunction = 'readDataTable';\n  selected = [];\n  privilege = {\n    create: false,\n    update: false,\n    delete: false\n  };\n  params = {\n  };\n\n  fields = [\n    '#',\n    'name',\n    'description',\n    'href',\n    'id System Icon',\n    'category',\n    'priority',\n    'id System Type Element'\n  ];\n\n  @ViewChild('table') table: TableComponent;\n\n  constructor(public auth: AuthService,\n              private router: Router,\n              private service: systemMenuService,\n              private privilegesService: systemPrivilegesService) {\n    this.privilegesService.getPrivileges('systemMenu')\n      .subscribe(data => {\n        this.privilege = data;\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  update(id: number): void {\n    this.router.navigateByUrl('/systemMenu/update/' + id);\n  }\n\n  delete(id: number): void {\n    Swal.fire({\n      title: `¿Estas seguro de eliminar el registro ${id}?`,\n      type: 'warning',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then((result) => {\n      if (!result.dismiss) {\n        this.service.delete(id).subscribe(resp => {\n            Swal.fire('Eliminado', 'El registro se elimino correctamente!', 'error');\n            this.table.refreshTable();\n          },\n          error => {\n            Swal.fire(\n              'ERROR!',\n              'Hubo un error al eliminar, intente de nuevo',\n              'error'\n            );\n          });\n      }\n    });\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(ev): void {\n    let input = ev.target;\n    if (input.tagName !== 'A') {\n      input = input.parentNode;\n    }\n\n    const classTag = input.className;\n\n    if (classTag.includes('edit')) {\n      this.update(input.attributes.index.value);\n    }\n\n    if (classTag.includes('delete')) {\n      this.delete(input.attributes.index.value);\n    }\n  }\n}\n","<section class=\"card animated fadeIn\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2 text-left\">\n        <button class=\"btn btn-success\" routerLink=\"create\" *ngIf=\"privilege.create\">\n          <span>\n            <i class=\"fa fa-plus\"></i> Agregar\n          </span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-left\">\n        <button class=\"btn btn-warning\" *ngIf=\"privilege.update\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-pencil\"></i> Editar\n          </span>\n        </button>\n        <button class=\"btn btn-danger\" *ngIf=\"privilege.delete\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-trash\"></i> Eliminar\n          </span>\n        </button>\n      </div>\n    </div>\n      <app-table #table\n                 [serveSource]=\"serveSource\"\n                 [serveFunction]=\"serverFunction\"\n                 [params]=\"params\"\n                 [fields]=\"fields\">\n    </app-table>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemMenuDataForm } from '../../interface/system-menu-data-form';\nimport { systemMenuService } from '../../service/system-menu.service';\nimport { systemIconService } from '../../../system-icon/service/system-icon.service';\nimport { systemRoleService } from '../../../system-role/service/system-role.service';\nimport { systemTypeElementService } from '../../../system-type-element/service/system-type-element.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n    selector: 'app-system-menu-create',\n    templateUrl: './system-menu-create.component.html',\n    styles: []\n})\n\nexport class systemMenuCreateComponent extends systemMenuDataForm implements OnInit {\n    form: FormGroup;\n    register = false;\n    loading = true;\n    @Input() modal = false;\n\n    constructor(private router: Router,\n                private formBuilder: FormBuilder,\n                private validators: ValidatorsService,\n                private activeModal: NgbActiveModal,\n                private service: systemMenuService,\n                private systemIconService: systemIconService,\n                private systemTypeElementService: systemTypeElementService,\n                private systemRoleService: systemRoleService) {\n        super(service,\n            systemIconService,\n            systemTypeElementService,\n            systemRoleService);\n    }\n\n    ngOnInit(): void {\n        this.form = this.formBuilder.group({\n            name: [null, [Validators.minLength(1), Validators.maxLength(32)]],\n            description: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n            href: [null, [Validators.minLength(1), Validators.maxLength(256)]],\n            idSystemIcon: [null, []],\n            category: [null, []],\n            priority: [null, []],\n            idSystemTypeElement: [null, []],\n            roles: [null, []]\n        });\n\n        this.loading = false;\n    }\n\n    submit(values): void {\n        this.register = true;\n        if (this.form.valid) {\n            this.service.create(values)\n                .subscribe(resp => {\n                    if (this.modal) {\n                        let id = resp['@id'].split('/');\n                        id = parseInt(id[id.length - 1]);\n                        this.activeModal.close(id);\n                        return;\n                    }\n                    this.return();\n                    this.register = false;\n                }, error => {\n                    Swal.fire({\n                        title: 'Error',\n                        type: 'error',\n                        text: 'Ocurrió un error' + error.message\n                    }).then(() => {\n                        console.log(error);\n                        this.register = false;\n                    });\n                });\n        } else {\n            this.form.markAllAsTouched();\n            this.register = false;\n        }\n    }\n\n    return(): void {\n        if (this.modal) {\n            this.activeModal.dismiss('cancel');\n            return;\n        }\n        this.router.navigate(['/systemMenu']).then();\n    }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemMenu\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"idSystemTypeElement\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"description\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"href\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"idSystemIcon\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"category\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"priority\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"roles\"></app-input-template>\n</app-create-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { systemMenuRoutingModule } from './system-menu-routing.module';\nimport { systemMenuCreateComponent } from './components/create/system-menu-create.component';\nimport { systemMenuReadComponent } from './components/read/system-menu-read.component';\nimport { systemMenuUpdateComponent } from './components/update/system-menu-update.component';\nimport { SharedModule } from '../../components/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    systemMenuCreateComponent,\n    systemMenuReadComponent,\n    systemMenuUpdateComponent\n  ],\n  imports: [\n    CommonModule,\n    systemMenuRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class systemMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class systemMenuService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/systemMenu`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/systemMenu/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/systemMenu/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/systemMenu/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/systemMenu/combo`, { headers });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { systemMenuCreateComponent } from './components/create/system-menu-create.component';\nimport { systemMenuReadComponent } from './components/read/system-menu-read.component';\nimport { systemMenuUpdateComponent } from './components/update/system-menu-update.component';\nimport { GuardService } from '../../services/guard.service';\n\nconst routes: Routes = [\n  { path: '',\n    component: systemMenuReadComponent, canActivate: [ GuardService ], data: { privilege: 4 }\n  },\n  { path: 'create',\n    component: systemMenuCreateComponent, canActivate: [ GuardService ], data: { privilege: 1 }\n  },\n  { path: 'update/:id',\n    component: systemMenuUpdateComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class systemMenuRoutingModule { }\n","import { DataForm } from '../../../interfaces/data-form';\nimport { systemIconService } from '../../system-icon/service/system-icon.service';\nimport { systemIconCreateComponent } from '../../system-icon/components/create/system-icon-create.component';\nimport { systemTypeElementService } from '../../system-type-element/service/system-type-element.service';\nimport {\n    systemTypeElementCreateComponent\n} from '../../system-type-element/components/create/system-type-element-create.component';\nimport { systemRoleService } from '../../system-role/service/system-role.service';\nimport { systemMenuService } from '../service/system-menu.service';\n\nexport abstract class systemMenuDataForm {\n\n    name: DataForm = {\n        field: 'name',\n        type: 'text',\n        label: 'Name',\n        message: 'Ingrese minimo 1 letra y maximo 32'\n    };\n    description: DataForm = {\n        field: 'description',\n        type: 'text',\n        label: 'Description',\n        message: 'Ingrese minimo 1 letra y maximo 64'\n    };\n    href: DataForm = {\n        field: 'href',\n        type: 'text',\n        label: 'Href',\n        message: 'Ingrese minimo 1 letra y maximo 256'\n    };\n    idSystemIcon: DataForm = {\n        field: 'idSystemIcon',\n        type: 'select',\n        label: 'Id System Icon',\n        message: 'Ingrese un icono'\n    };\n    category: DataForm = {\n        field: 'category',\n        type: 'select',\n        label: 'Category',\n        message: 'Ingrese un numero'\n    };\n    priority: DataForm = {\n        field: 'priority',\n        type: 'number',\n        label: 'Priority',\n        message: 'Ingrese un numero'\n    };\n    idSystemTypeElement: DataForm = {\n        field: 'idSystemTypeElement',\n        type: 'select',\n        label: 'Id System Type Element',\n        message: 'Ingrese un systemTypeElement'\n    };\n    roles: DataForm = {\n        field: 'roles',\n        type: 'select',\n        label: 'Roles',\n        message: 'Ingrese los roles',\n        multiple: true,\n    };\n\n    protected constructor(service: systemMenuService,\n                          systemIconService: systemIconService,\n                          systemTypeElementService: systemTypeElementService,\n                          systemRoleService: systemRoleService) {\n        this.idSystemIcon.items = systemIconService.combo();\n        this.idSystemIcon.empty = true;\n        this.idSystemIcon.add = false;\n        this.idSystemIcon.icon = true;\n        this.idSystemIcon.component = systemIconCreateComponent;\n        this.category.items = service.combo();\n        this.category.empty = true;\n        this.category.emptyMessage = \"MISMA CATEGORIA\";\n        this.idSystemTypeElement.items = systemTypeElementService.combo();\n        this.idSystemTypeElement.empty = true;\n        this.idSystemTypeElement.add = false;\n        this.idSystemTypeElement.component = systemTypeElementCreateComponent;\n        this.roles.items = systemRoleService.combo();\n        this.roles.empty = true;\n        this.roles.multiple = true;\n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class systemRoleService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    create(formData: {}): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.post(`${ API_URL }api/systemRole`, formData, { headers });\n    }\n\n    update(formData: {}, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.put(`${ API_URL }api/systemRole/${ id }`, formData, { headers });\n    }\n\n    delete(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.delete(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    data(id): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    combo(): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/combo`, { headers });\n    }\n\n\n    privilegesRole(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }/privileges`, { headers });\n    }\n\n    setSystemRolePrivileges(formValue, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n\n        return this.http.post(`${ API_URL }api/systemRole/${ id }/privileges`, { formValue }, { headers });\n    }\n}\n"]}