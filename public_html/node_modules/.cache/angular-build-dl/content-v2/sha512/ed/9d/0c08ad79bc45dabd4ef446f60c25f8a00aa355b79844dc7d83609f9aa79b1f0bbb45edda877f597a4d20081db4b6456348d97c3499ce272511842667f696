{"version":3,"sources":["webpack:///src/app/module/system-log/components/create/system-log-create.component.ts","webpack:///src/app/module/system-log/components/create/system-log-create.component.html","webpack:///src/app/module/system-log/system-log.module.ts","webpack:///src/app/module/system-log/interface/system-log-data-form.ts","webpack:///src/app/module/system-log/components/read/system-log-read.component.ts","webpack:///src/app/module/system-log/components/read/system-log-read.component.html","webpack:///src/app/module/system-log/components/update/system-log-update.component.ts","webpack:///src/app/module/system-log/components/update/system-log-update.component.html","webpack:///src/app/module/system-log/system-log-routing.module.ts","webpack:///src/app/module/system-log/service/system-log.service.ts"],"names":["systemLogCreateComponent","router","formBuilder","validators","activeModal","service","systemUserService","register","loading","modal","form","group","table","minLength","maxLength","tuple","date","data","idSystemUser","idSystemAction","ipAddress","agent","values","valid","create","subscribe","resp","id","split","parseInt","length","close","error","fire","title","type","text","message","then","console","log","markAllAsTouched","dismiss","navigate","submit","selector","templateUrl","styles","systemLogModule","declarations","imports","systemLogDataForm","field","label","dataForm","formForm","items","combo","empty","add","component","systemLogReadComponent","auth","privilegesService","disabled","serveSource","serverFunction","selected","privilege","update","params","fields","getPrivileges","navigateByUrl","showCloseButton","showCancelButton","result","refreshTable","ev","input","target","tagName","parentNode","classTag","className","includes","attributes","index","value","styleUrls","onClick","systemLogUpdateComponent","activatedRoute","initForm","controls","setValue","routes","path","canActivate","pathMatch","redirectTo","systemLogRoutingModule","forChild","exports","systemLogService","http","formData","headers","Authorization","localStorage","getItem","post","put","get","providedIn"],"mappings":"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","file":"module-system-log-system-log-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemLogDataForm } from \"../../interface/system-log-data-form\";\nimport { systemLogService } from '../../service/system-log.service';\nimport { systemUserService } from '../../../system-user/service/system-user.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-system-log-create',\n  templateUrl: './system-log-create.component.html',\n  styles: []\n})\n\nexport class systemLogCreateComponent extends systemLogDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemLogService,\n              private systemUserService: systemUserService) {\n    super(systemUserService);\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      table: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n      tuple: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n      date: [null, []],\n      data: [null, [Validators.minLength(1), Validators.maxLength(65535)]],\n      idSystemUser: [null, []],\n      idSystemAction: [null, []],\n      ipAddress: [null, [Validators.minLength(1), Validators.maxLength(32)]],\n      agent: [null, [Validators.minLength(1), Validators.maxLength(256)]],\n      form: [null, [Validators.minLength(1), Validators.maxLength(128)]]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemLog']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemLog\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"table\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"tuple\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"date\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"dataForm\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"idSystemUser\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"idSystemAction\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"ipAddress\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"agent\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"formForm\"></app-input-template>\n</app-create-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { systemLogRoutingModule } from './system-log-routing.module';\nimport { systemLogCreateComponent } from './components/create/system-log-create.component';\nimport { systemLogReadComponent } from './components/read/system-log-read.component';\nimport { systemLogUpdateComponent } from './components/update/system-log-update.component';\nimport { SharedModule } from '../../components/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    systemLogCreateComponent,\n    systemLogReadComponent,\n    systemLogUpdateComponent\n  ],\n  imports: [\n    CommonModule,\n    systemLogRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class systemLogModule {\n}\n","import { DataForm } from '../../../interfaces/data-form';\nimport { systemUserService } from '../../system-user/service/system-user.service';\nimport { systemUserCreateComponent } from '../../system-user/components/create/system-user-create.component';\n\nexport abstract class systemLogDataForm {\n\n    table: DataForm = {\n    field: 'table',\n    type: 'text',\n    label: 'Table',\n    message: 'Ingrese minimo 1 letra y maximo 64'\n  };\n  tuple: DataForm = {\n    field: 'tuple',\n    type: 'text',\n    label: 'Tuple',\n    message: 'Ingrese minimo 1 letra y maximo 64'\n  };\n  date: DataForm = {\n    field: 'date',\n    type: 'datetime-local',\n    label: 'Date',\n    message: 'Ingrese una fecha'\n  };\n  dataForm: DataForm = {\n    field: 'data',\n    type: 'text',\n    label: 'Data',\n    message: 'Ingrese minimo 1 letra y maximo 65535'\n  };\n  idSystemUser: DataForm = {\n    field: 'idSystemUser',\n    type: 'select',\n    label: 'Id System User',\n    message: 'Ingrese un systemUser'\n  };\n  idSystemAction: DataForm = {\n    field: 'idSystemAction',\n    type: 'number',\n    label: 'Id System Action',\n    message: 'Ingrese un numero'\n  };\n  ipAddress: DataForm = {\n    field: 'ipAddress',\n    type: 'text',\n    label: 'Ip Address',\n    message: 'Ingrese minimo 1 letra y maximo 32'\n  };\n  agent: DataForm = {\n    field: 'agent',\n    type: 'text',\n    label: 'Agent',\n    message: 'Ingrese minimo 1 letra y maximo 256'\n  };\n  formForm: DataForm = {\n    field: 'form',\n    type: 'text',\n    label: 'Form',\n    message: 'Ingrese minimo 1 letra y maximo 128'\n  };\n\n    protected constructor(systemUserService: systemUserService) {\n        this.idSystemUser.items = systemUserService.combo();\n    this.idSystemUser.empty = true;\n    this.idSystemUser.add = true;\n    this.idSystemUser.component = systemUserCreateComponent;\n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { systemLogService } from '../../service/system-log.service';\nimport { systemPrivilegesService } from '../../../system-privileges/service/system-privileges.service';\nimport { TableComponent } from '../../../../components/shared/table/table.component';\n\n@Component({\n  selector: 'app-system-log',\n  templateUrl: './system-log-read.component.html',\n  styleUrls: []\n})\nexport class systemLogReadComponent implements OnInit {\n  disabled = true;\n  serveSource = 'systemLog';\n  serverFunction = 'readDataTable';\n  selected = [];\n  privilege = {\n    create: false,\n    update: false,\n    delete: false\n  };\n  params = {\n  };\n\n  fields = [\n    '#',\n    'table',\n    'tuple',\n    'date',\n    'data',\n    'id System User',\n    'id System Action',\n    'ip Address',\n    'agent',\n    'form'\n  ];\n\n  @ViewChild('table') table: TableComponent;\n\n  constructor(public auth: AuthService,\n              private router: Router,\n              private service: systemLogService,\n              private privilegesService: systemPrivilegesService) {\n    this.privilegesService.getPrivileges('systemLog')\n      .subscribe(data => {\n        this.privilege = data;\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  update(id: number): void {\n    this.router.navigateByUrl('/systemLog/update/' + id);\n  }\n\n  delete(id: number): void {\n    Swal.fire({\n      title: `¿Estas seguro de eliminar el registro ${id}?`,\n      type: 'warning',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then((result) => {\n      if (!result.dismiss) {\n        this.service.delete(id).subscribe(resp => {\n            Swal.fire('Eliminado', 'El registro se elimino correctamente!', 'error');\n            this.table.refreshTable();\n          },\n          error => {\n            Swal.fire(\n              'ERROR!',\n              'Hubo un error al eliminar, intente de nuevo',\n              'error'\n            );\n          });\n      }\n    });\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(ev): void {\n    let input = ev.target;\n    if (input.tagName !== 'A') {\n      input = input.parentNode;\n    }\n\n    const classTag = input.className;\n\n    if (classTag.includes('edit')) {\n      this.update(input.attributes.index.value);\n    }\n\n    if (classTag.includes('delete')) {\n      this.delete(input.attributes.index.value);\n    }\n  }\n}\n","<section class=\"card animated fadeIn\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2 text-left\">\n        <button class=\"btn btn-success\" routerLink=\"create\" *ngIf=\"privilege.create\">\n          <span>\n            <i class=\"fa fa-plus\"></i> Agregar\n          </span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-left\">\n        <button class=\"btn btn-warning\" *ngIf=\"privilege.update\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-pencil\"></i> Editar\n          </span>\n        </button>\n        <button class=\"btn btn-danger\" *ngIf=\"privilege.delete\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-trash\"></i> Eliminar\n          </span>\n        </button>\n      </div>\n    </div>\n      <app-table #table\n                 [serveSource]=\"serveSource\"\n                 [serveFunction]=\"serverFunction\"\n                 [params]=\"params\"\n                 [fields]=\"fields\">\n    </app-table>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemLogService } from '../../service/system-log.service';\nimport { systemUserService } from '../../../system-user/service/system-user.service';\nimport { systemLog } from '../../interface/system-log';\nimport { systemLogDataForm } from \"../../interface/system-log-data-form\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-system-log-update',\n  templateUrl: './system-log-update.component.html',\n  styles: []\n})\n\nexport class systemLogUpdateComponent extends systemLogDataForm implements OnInit {\n  form: FormGroup;\n  loading = true;\n  register = false;\n  @Input() modal = false;\n\n  @Input()\n  id: number;\n  data: systemLog;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemLogService,\n              private systemUserService: systemUserService) {\n\n    super(systemUserService);\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      table: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n          tuple: [null, [Validators.minLength(1), Validators.maxLength(64)]],\n          date: [null, []],\n          data: [null, [Validators.minLength(1), Validators.maxLength(65535)]],\n          idSystemUser: [null, []],\n          idSystemAction: [null, []],\n          ipAddress: [null, [Validators.minLength(1), Validators.maxLength(32)]],\n          agent: [null, [Validators.minLength(1), Validators.maxLength(256)]],\n          form: [null, [Validators.minLength(1), Validators.maxLength(128)]]\n    });\n\n    if (typeof this.id !== \"undefined\") {\n      this.service.data(this.id).subscribe(data => this.initForm(data),\n          () => this.return);\n    } else {\n      this.activatedRoute.params.subscribe(params => {\n        this.id = params.id;\n        this.service.data(this.id).subscribe(data => this.initForm(data),\n            () => this.return);\n      });\n    }\n  }\n\n  initForm(data): void {\n    this.data = data;\n\n    this.form.controls.table.setValue(this.data.table);\n    this.form.controls.tuple.setValue(this.data.tuple);\n    this.form.controls.date.setValue(this.data.date);\n    this.form.controls.data.setValue(this.data.data);\n    this.form.controls.idSystemUser.setValue(this.data.idSystemUser);\n    this.form.controls.idSystemAction.setValue(this.data.idSystemAction);\n    this.form.controls.ipAddress.setValue(this.data.ipAddress);\n    this.form.controls.agent.setValue(this.data.agent);\n    this.form.controls.form.setValue(this.data.form);\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.update(values, this.id)\n        .subscribe(() => {\n          if (this.modal){\n            this.activeModal.close(this.id);\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error'\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n            });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemLog']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemLog\"\n                     [create]=\"false\" [id]=\"id\" (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"table\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"tuple\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"date\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"dataForm\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"idSystemUser\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"idSystemAction\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"ipAddress\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"agent\"></app-input-template>\n  <app-input-template [form]=\"form\" [data]=\"formForm\"></app-input-template>\n</app-create-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { systemLogCreateComponent } from './components/create/system-log-create.component';\nimport { systemLogReadComponent } from './components/read/system-log-read.component';\nimport { systemLogUpdateComponent } from './components/update/system-log-update.component';\nimport { GuardService } from '../../services/guard.service';\n\nconst routes: Routes = [\n  { path: '',\n    component: systemLogReadComponent, canActivate: [ GuardService ], data: { privilege: 4 }\n  },\n  { path: 'create',\n    component: systemLogCreateComponent, canActivate: [ GuardService ], data: { privilege: 1 }\n  },\n  { path: 'update/:id',\n    component: systemLogUpdateComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class systemLogRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class systemLogService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/systemLog`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/systemLog/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/systemLog/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/systemLog/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/systemLog/combo`, { headers });\n  }\n}\n"]}