{"version":3,"file":"angular2-tinymce-lib.component.d.ts","sources":["angular2-tinymce-lib.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, AfterViewInit, NgZone, OnInit, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { TinymceOptions } from './angular2-tinymce-lib.config.interface';\nimport 'tinymce/tinymce.min';\nimport 'tinymce/themes/modern/theme';\nimport 'tinymce/plugins/link/plugin.js';\nimport 'tinymce/plugins/paste/plugin.js';\nimport 'tinymce/plugins/table/plugin.js';\nimport 'tinymce/plugins/advlist/plugin.js';\nimport 'tinymce/plugins/autoresize/plugin.js';\nimport 'tinymce/plugins/lists/plugin.js';\nimport 'tinymce/plugins/code/plugin.js';\nexport declare class TinymceComponent implements ControlValueAccessor, AfterViewInit, OnInit, OnDestroy {\n    private zone;\n    private globalOptions;\n    optionsOverride: TinymceOptions;\n    click: EventEmitter<{}>;\n    dblclick: EventEmitter<{}>;\n    mousedown: EventEmitter<{}>;\n    mouseup: EventEmitter<{}>;\n    mousemove: EventEmitter<{}>;\n    mouseover: EventEmitter<{}>;\n    mouseout: EventEmitter<{}>;\n    mouseenter: EventEmitter<{}>;\n    mouseleave: EventEmitter<{}>;\n    keydown: EventEmitter<{}>;\n    keypress: EventEmitter<{}>;\n    keyup: EventEmitter<{}>;\n    contextmenu: EventEmitter<{}>;\n    paste: EventEmitter<{}>;\n    init: EventEmitter<{}>;\n    focus: EventEmitter<{}>;\n    blur: EventEmitter<{}>;\n    beforeSetContent: EventEmitter<{}>;\n    setContent: EventEmitter<{}>;\n    getContent: EventEmitter<{}>;\n    preProcess: EventEmitter<{}>;\n    postProcess: EventEmitter<{}>;\n    nodeChange: EventEmitter<{}>;\n    undo: EventEmitter<{}>;\n    redo: EventEmitter<{}>;\n    change: EventEmitter<{}>;\n    dirty: EventEmitter<{}>;\n    remove: EventEmitter<{}>;\n    execCommand: EventEmitter<{}>;\n    pastePreProcess: EventEmitter<{}>;\n    pastePostProcess: EventEmitter<{}>;\n    elementId: string;\n    editor: any;\n    private onTouchedCallback;\n    private onChangeCallback;\n    private innerValue;\n    private options;\n    constructor(zone: NgZone, globalOptions: TinymceOptions);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    value: any;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setupEvents(editor: any): void;\n}\n"]}