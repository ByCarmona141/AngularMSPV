{"version":3,"sources":["webpack:///src/app/module/tipo-de-servicio/components/create/tipo-de-servicio-create.component.ts","webpack:///src/app/module/tipo-de-servicio/components/create/tipo-de-servicio-create.component.html","webpack:///src/app/module/tipo-de-servicio/service/tipo-de-servicio.service.ts","webpack:///src/app/module/catalogo-de-requerimientos/interface/catalogo-de-requerimientos-data-form.ts","webpack:///src/app/module/catalogo-de-requerimientos/components/create/catalogo-de-requerimientos-create.component.ts","webpack:///src/app/module/catalogo-de-requerimientos/components/create/catalogo-de-requerimientos-create.component.html","webpack:///src/app/module/catalogo-de-requerimientos/service/catalogo-de-requerimientos.service.ts","webpack:///src/app/module/tipo-de-servicio/interface/tipo-de-servicio-data-form.ts"],"names":["TipoDeServicioCreateComponent","router","formBuilder","validators","activeModal","service","register","loading","modal","form","group","Nombre","minLength","maxLength","required","Descripcion","Activo","values","valid","create","subscribe","resp","id","split","parseInt","length","close","error","fire","title","type","text","message","then","console","log","markAllAsTouched","dismiss","navigate","submit","selector","templateUrl","styles","TipoDeServicioService","http","formData","headers","Authorization","localStorage","getItem","post","put","get","providedIn","CatalogoDeRequerimientosDataForm","tipoDeServicioService","TipoDeServicio","field","label","Requerimiento","Orden","Requerido","Catalogo","items","combo","empty","add","component","CatalogoDeRequerimientosCreateComponent","CatalogoDeRequerimientosService","TipoDeServicioDataForm"],"mappings":"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","file":"default~module-catalogo-de-requerimientos-catalogo-de-requerimientos-module~module-requerimiento-cli~ffc5972b-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { TipoDeServicioDataForm } from \"../../interface/tipo-de-servicio-data-form\";\nimport { TipoDeServicioService } from '../../service/tipo-de-servicio.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-tipo-de-servicio-create',\n  templateUrl: './tipo-de-servicio-create.component.html',\n  styles: []\n})\n\nexport class TipoDeServicioCreateComponent extends TipoDeServicioDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: TipoDeServicioService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      Nombre: [null, [Validators.minLength(1), Validators.maxLength(64), Validators.required]],\n      Descripcion: [null, [Validators.minLength(1), Validators.maxLength(65535)]],\n      Activo: [null, [Validators.required]]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/TipoDeServicio']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"TipoDeServicio\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"Nombre\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Descripcion\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Activo\"></app-input-template>\n</app-create-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoDeServicioService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/TipoDeServicio`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/TipoDeServicio/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/TipoDeServicio/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/TipoDeServicio/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/TipoDeServicio/combo`, { headers });\n  }\n}\n","import { DataForm } from '../../../interfaces/data-form';\nimport {TipoDeServicioService} from \"../../tipo-de-servicio/service/tipo-de-servicio.service\";\nimport {\n  TipoDeServicioCreateComponent\n} from \"../../tipo-de-servicio/components/create/tipo-de-servicio-create.component\";\n\nexport abstract class CatalogoDeRequerimientosDataForm {\n\n    TipoDeServicio: DataForm = {\n    field: 'TipoDeServicio',\n    type: 'select',\n    label: 'Tipo De Servicio',\n    message: 'Ingrese un numero'\n  };\n  Requerimiento: DataForm = {\n    field: 'Requerimiento',\n    type: 'text',\n    label: 'Requerimiento',\n    message: 'Ingrese minimo 1 letra y maximo 256'\n  };\n  Orden: DataForm = {\n    field: 'Orden',\n    type: 'number',\n    label: 'Orden',\n    message: 'Ingrese un numero'\n  };\n  Requerido: DataForm = {\n    field: 'Requerido',\n    type: 'number',\n    label: 'Requerido',\n    message: 'Ingrese un numero'\n  };\n  Catalogo: DataForm = {\n    field: 'Catalogo',\n    type: 'text',\n    label: 'Catálogo',\n    message: 'Ingrese minimo 1 letra y maximo 65535'\n  };\n\n    protected constructor(tipoDeServicioService: TipoDeServicioService) {\n      // Para el select de tipo de vialidad\n      this.TipoDeServicio.items = tipoDeServicioService.combo();\n      this.TipoDeServicio.empty = true;\n      this.TipoDeServicio.add = true;\n      this.TipoDeServicio.component = TipoDeServicioCreateComponent;\n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { CatalogoDeRequerimientosDataForm } from \"../../interface/catalogo-de-requerimientos-data-form\";\nimport { CatalogoDeRequerimientosService } from '../../service/catalogo-de-requerimientos.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\nimport {TipoDeServicioService} from \"../../../tipo-de-servicio/service/tipo-de-servicio.service\";\n\n\n@Component({\n  selector: 'app-catalogo-de-requerimientos-create',\n  templateUrl: './catalogo-de-requerimientos-create.component.html',\n  styles: []\n})\n\nexport class CatalogoDeRequerimientosCreateComponent extends CatalogoDeRequerimientosDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: CatalogoDeRequerimientosService,\n              private tipoDeServicioService: TipoDeServicioService) {\n    super(tipoDeServicioService);\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      TipoDeServicio: [null, [Validators.required]],\n      Requerimiento: [null, [Validators.minLength(1), Validators.maxLength(256), Validators.required]],\n      Orden: [null, [Validators.required]],\n      Requerido: [null, []],\n      Catalogo: [null, [Validators.minLength(1), Validators.maxLength(65535)]]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/CatalogoDeRequerimientos']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"CatalogoDeRequerimientos\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"TipoDeServicio\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Requerimiento\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Orden\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Requerido\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"Catalogo\"></app-input-template>\n</app-create-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogoDeRequerimientosService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  create(formData: {}): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.post(`${API_URL}api/CatalogoDeRequerimientos`, formData, { headers });\n  }\n\n  update(formData: {}, id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.put(`${API_URL}api/CatalogoDeRequerimientos/${id}`, formData, { headers });\n  }\n\n  delete(id: number): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.delete(`${API_URL}api/CatalogoDeRequerimientos/${id}`, { headers });\n  }\n\n  data(id): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/CatalogoDeRequerimientos/${ id }`, { headers });\n  }\n\n  combo(): Observable<any> {\n    const headers = new HttpHeaders({\n        Authorization: localStorage.getItem(systemName + 'Token')\n    });\n    return this.http.get(`${API_URL}api/CatalogoDeRequerimientos/combo`, { headers });\n  }\n}\n","import { DataForm } from '../../../interfaces/data-form';\n\nexport abstract class TipoDeServicioDataForm {\n\n    Nombre: DataForm = {\n    field: 'Nombre',\n    type: 'text',\n    label: 'Nombre',\n    message: 'Ingrese minimo 1 letra y maximo 64'\n  };\n  Descripcion: DataForm = {\n    field: 'Descripcion',\n    type: 'text',\n    label: 'Descripción',\n    message: 'Ingrese minimo 1 letra y maximo 65535'\n  };\n  Activo: DataForm = {\n    field: 'Activo',\n    type: 'number',\n    label: 'Activo',\n    message: 'Ingrese un numero'\n  };\n\n    protected constructor() {\n        \n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n"]}