{"version":3,"sources":["./src/app/module/system-role/components/update/system-role-update.component.ts","./src/app/module/system-role/components/update/system-role-update.component.html","./src/app/module/system-role/system-role.module.ts","./src/app/module/system-role/system-role-routing.module.ts","./src/app/module/system-role/components/read/system-role-read.component.ts","./src/app/module/system-role/components/read/system-role-read.component.html","./src/app/module/system-role/components/create/system-role-create.component.ts","./src/app/module/system-role/components/create/system-role-create.component.html","./src/app/module/system-role/service/system-role.service.ts","./src/app/module/system-role/components/privileges/privileges.component.ts","./src/app/module/system-role/components/privileges/privileges.component.html","./src/app/module/system-role/interface/system-role-data-form.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEW;AAIO;AAE5C;;;;;;;;;AAQxB,MAAM,yBAA0B,SAAQ,mFAAkB;IAU/D,YAAoB,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,UAA6B,EAC7B,WAA2B,EAC3B,OAA0B;QAE5C,KAAK,EAAE,CAAC;QAPU,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAgB;QAC3B,YAAO,GAAP,OAAO,CAAmB;QAb9C,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAG,KAAK,CAAC;QACR,UAAK,GAAG,KAAK,CAAC;IAcvB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;SACvB,CAAC,CAAC;QAEH,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,WAAW,EAAE;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC5D,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC5D,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAErD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;iBACjC,SAAS,CAAC,GAAG,EAAE;gBACd,IAAI,IAAI,CAAC,KAAK,EAAC;oBACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,kBAAkB;iBACzB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,KAAK,EAAC;YACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnC,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;;kGA/EU,yBAAyB;yGAAzB,yBAAyB;QChBtC,yFAEE;QAD8C,sKAAU,kBAAc,IAAC,wGAAW,YAAQ,IAAnB;QACvE,mFAAqE;QAC/D,mFAAuE;QAC/E,4DAAsB;;QAJD,gFAAmB;QAElB,0DAAa;QAAb,0EAAa;QACP,0DAAa;QAAb,0EAAa;;6FDa5B,yBAAyB;cANrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,MAAM,EAAE,EAAE;aACX;+fAMU,KAAK;kBAAb,mDAAK;YAGN,EAAE;kBADD,mDAAK;;;;;;;;;;;;;;AEtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACwB;AACsB;AACN;AACM;AACxB;AACH;AACiB;;AAiB5E,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBARlB;YACP,4DAAY;YACZ,mFAAuB;YACvB,6EAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAEU,gBAAgB,mBAbzB,yGAAyB;QACzB,mGAAuB;QACvB,yGAAyB;QACvB,+FAAmB,aAGrB,4DAAY;QACZ,mFAAuB;QACvB,6EAAY;QACZ,0DAAW;QACX,kEAAmB;6FAGV,gBAAgB;cAf5B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,yGAAyB;oBACzB,mGAAuB;oBACvB,yGAAyB;oBACvB,+FAAmB;iBACtB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,mFAAuB;oBACvB,6EAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsC;AACN;AACM;AACjC;AACuB;;;AAEnF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mGAAuB,EAAE,WAAW,EAAE,CAAE,oEAAY,CAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;KAC1F;IACD,EAAE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,yGAAyB,EAAE,WAAW,EAAE,CAAE,oEAAY,CAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;KAC5F;IACD,EAAE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,yGAAyB,EAAE,WAAW,EAAE,CAAE,oEAAY,CAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;KAC5F;IACD,EAAE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,+FAAmB,EAAE,WAAW,EAAE,CAAE,oEAAY,CAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;KACtF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE;CAClD,CAAC;AAMK,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAG5C;;;;;;;;;;ICCvB,6EACE;IAAA,uEACE;IAAA,mEAA0B;IAAC,oEAC7B;IAAA,4DAAO;IACT,4DAAS;;;IAGT,6EACE;IAAA,uEACE;IAAA,mEAA4B;IAAC,mEAC/B;IAAA,4DAAO;IACT,4DAAS;;;IAJgD,iGAAiC;;;IAK1F,6EACE;IAAA,uEACE;IAAA,mEAA2B;IAAC,qEAC9B;IAAA,4DAAO;IACT,4DAAS;;;IAJ+C,iGAAiC;;ADH1F,MAAM,uBAAuB;IAsBlC,YAAmB,IAAiB,EAChB,MAAc,EACd,OAA0B,EAC1B,iBAA0C;QAH3C,SAAI,GAAJ,IAAI,CAAa;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAyB;QAxB9D,aAAQ,GAAG,IAAI,CAAC;QAChB,gBAAW,GAAG,YAAY,CAAC;QAC3B,mBAAc,GAAG,eAAe,CAAC;QACjC,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG;YACV,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;SACd,CAAC;QACF,WAAM,GAAG,EACR,CAAC;QAEF,WAAM,GAAG;YACP,GAAG;YACH,QAAQ;YACR,QAAQ;YACR,aAAa;SACd,CAAC;QAQA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC;aAC/C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;IACR,CAAC;IAED,MAAM,CAAC,EAAU;QACf,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,GAAG,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,EAAU;QACf,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,yCAAyC,EAAE,GAAG;YACrD,IAAI,EAAE,SAAS;YACf,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACnB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACrC,kDAAI,CAAC,IAAI,CAAC,WAAW,EAAE,uCAAuC,EAAE,OAAO,CAAC,CAAC;oBACzE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;gBAC5B,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,kDAAI,CAAC,IAAI,CACP,QAAQ,EACR,6CAA6C,EAC7C,OAAO,CACR,CAAC;gBACJ,CAAC,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,OAAO,CAAC,EAAE;QACR,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC;QACtB,IAAI,KAAK,CAAC,OAAO,KAAK,GAAG,EAAE;YACzB,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;SAC1B;QAED,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;QAEjC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC3C;QAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC3C;QAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;SAC5F;IACH,CAAC;;8FAlFU,uBAAuB;uGAAvB,uBAAuB;;;;;;qJAAvB,mBAAe;;QCb5B,6EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yHAIS;QACX,4DAAM;QACN,yEACE;QAAA,yHAIS;QACT,yHAIS;QACX,4DAAM;QACR,4DAAM;QACJ,6EAKU;QACd,4DAAM;QACR,4DAAU;;QA1BmD,0DAAsB;QAAtB,sFAAsB;QAO1C,0DAAsB;QAAtB,sFAAsB;QAKvB,0DAAsB;QAAtB,sFAAsB;QAQ7C,0DAA2B;QAA3B,wFAA2B;;6FDX/B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,EAAE;aACd;sYAqBqB,KAAK;kBAAxB,uDAAS;mBAAC,OAAO;YA2ClB,OAAO;kBADN,0DAAY;mBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AE3EnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEW;AAEO;AAG5C;;;;;;;;;AASxB,MAAM,yBAA0B,SAAQ,mFAAkB;IAM/D,YAAoB,MAAc,EACd,WAAwB,EACxB,UAA6B,EAC7B,WAA2B,EAC3B,OAA0B;QAC5C,KAAK,EAAE,CAAC;QALU,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAgB;QAC3B,YAAO,GAAP,OAAO,CAAmB;QAR9C,aAAQ,GAAG,KAAK,CAAC;QACjB,YAAO,GAAG,IAAI,CAAC;QACN,UAAK,GAAG,KAAK,CAAC;IAQvB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAClE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;iBACxB,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChB,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAC3B,OAAO;iBACR;gBACD,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,kBAAkB,GAAG,KAAK,CAAC,OAAO;iBACzC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,KAAK,EAAC;YACb,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnC,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;;kGA1DU,yBAAyB;yGAAzB,yBAAyB;QChBtC,yFAEE;QADmB,sKAAU,kBAAc,IAAC,wGAAW,YAAQ,IAAnB;QAC5C,mFAAqE;QACjE,mFAAuE;QAC7E,4DAAsB;;QAJD,gFAAmB;QAElB,0DAAa;QAAb,0EAAa;QACT,0DAAa;QAAb,0EAAa;;6FDa1B,yBAAyB;cANrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,MAAM,EAAE,EAAE;aACX;qbAMU,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AEpBR;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACY;;;AAMpE,MAAM,iBAAiB;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,MAAM,CAAC,QAAY;QACf,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAI,iEAAQ,gBAAgB,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,MAAM,CAAC,QAAY,EAAE,EAAU;QAC3B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,iEAAQ,kBAAmB,EAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACtF,CAAC;IAED,MAAM,CAAC,EAAU;QACb,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAI,iEAAQ,kBAAmB,EAAG,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,IAAI,CAAC,EAAE;QACH,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,iEAAQ,kBAAmB,EAAG,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,KAAK;QACD,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,iEAAQ,sBAAsB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1E,CAAC;IAGD,cAAc,CAAC,EAAU;QACrB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,iEAAQ,kBAAmB,EAAG,aAAa,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,uBAAuB,CAAC,SAAS,EAAE,EAAU;QACzC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,oEAAU,GAAG,OAAO,CAAC;SAC5D,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAI,iEAAQ,kBAAmB,EAAG,aAAa,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACvG,CAAC;;kFAtDQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFd,MAAM;6FAET,iBAAiB;cAH7B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICC9C,6EACE;IAAA,0EACE;IAAA,mEAA2E;IAC7E,4DAAM;IACN,yEAAuB;IAAA,uDAA8B;IAAA,4DAAK;IAC5D,4DAAS;;;IADgB,0DAA8B;IAA9B,yGAA8B;;;IAIrD,sEACE;IAAA,0EACE;IAAA,0EACE;IAAA,mEAA2C;IAC7C,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IAgBE,yEACE;IAAA,0EACE;IAAA,wEAAO;IAAA,uDAAoB;IAAA,gEACzB;IAAA,4EACF;IADyB,6XAAmD;IAA1E,4DACF;IAAA,4DAAQ;IACV,4DAAM;IACR,4DAAK;;;IANwD,sGAAmC;IAErF,0DAAoB;IAApB,kFAAoB;;;IAkB/B,qEACE;IAAA,0EACE;IAAA,uEACF;IAAA,4DAAM;IACR,4DAAK;;;IAFsB,0DAA6B;IAA7B,0FAA6B;;;;IAZ1D,qEACE;IAAA,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAA+B;IAAA,4DAAK;IACxC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEACE;IAAA,0EACE;IAAA,4EAEF;IADS,wZAA8D,GAAG,6BAAuB;IAD/F,4DAEF;IAAA,4DAAM;IACR,4DAAK;IACL,4HAIK;IACP,4DAAK;;;;IAdC,0DAAwB;IAAxB,sFAAwB;IACxB,0DAA+B;IAA/B,6FAA+B;IAC/B,0DAAwB;IAAxB,sFAAwB;IAOE,0DAAiE;IAAjE,gJAAiE;;;;IAnCvG,sEACE;IAAA,0EACE;IAAA,4EACE;IAAA,wEACA;IAAA,qEACE;IAAA,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IACf,qEAAI;IAAA,2EAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,0EACE;IAAA,2EACE;IAAA,yEAAO;IAAA,qEAAS;IAAA,iEAAI;IAAA,uEAAW;IAAA,iEAC7B;IAAA,6EACF;IADyB,mVAAuC;IAA9D,4DACF;IAAA,4DAAQ;IACV,4DAAM;IACR,4DAAK;IACL,sHAMK;IACP,4DAAK;IACL,4DAAQ;IACR,yEACA;IAAA,uHAeK;IACL,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;;;IA7B4B,2DAAoB;IAApB,2FAAoB;IAUlB,0DAAsB;IAAtB,+FAAsB;;;AD/BzD,MAAM,mBAAmB;IAS5B,YAAoB,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,OAA0B;QAH1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAmB;QAV9C,SAAI,GAAG,IAAI,CAAC;QACZ,aAAQ,GAAG,KAAK,CAAC;QAGjB,QAAG,GAAG,EAAE,CAAC;IAOT,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAEvC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC/B,SAAS,CAAC,IAAI,CAAC,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBAErB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAEhB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAEtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAChB,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,EACzB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAC7B,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvC,aAAa;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAClD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAC1C,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnC,MAAM,UAAU,GAAG,EAAE,CAAC;YACtB,aAAa;YACb,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACjC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/B;YAED,SAAS,CAAC,IAAI,CAAC;gBACX,IAAI,EAAE,GAAG;gBACT,UAAU;aACb,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC;iBACnD,SAAS,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC1B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC1B,CAAC,CAAC,CAAC;SACV;aAAM;YACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACjF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;IACL,CAAC;IAED,iBAAiB,CAAC,MAAmB,EAAE,aAAqB;QACxD,MAAM,KAAK,GAAG,MAA0B,CAAC;QAEzC,aAAa;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC;QACvD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvB,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,sBAAsB,CAAC,MAAmB,EAAE,CAAS;QACjD,MAAM,KAAK,GAAG,MAA0B,CAAC;QAEzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnC,aAAa;YACb,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;IACL,CAAC;IAED,aAAa,CAAC,MAAmB;QAC7B,MAAM,KAAK,GAAG,MAA0B,CAAC;QACzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEnC,aAAa;YACb,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;;sFApHQ,mBAAmB;mGAAnB,mBAAmB;QCXhC,6EACE;QAAA,0EACE;QADkE,+IAAY,YAAQ,IAAC;QACvF,qHAKS;QAET,yEACE;QAAA,+GAMM;QACN,gHA4CM;QAER,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,4EACE;QAAA,kEAA0F;QAC1F,qEACF;QAAA,4DAAS;QACT,6EACE;QAAA,oEAAkC;QAAC,sEACrC;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAU;;QA3EyC,0DAAkB;QAAlB,+EAAkB;QACpC,0DAAW;QAAX,2EAAW;QAQhC,0DAAU;QAAV,0EAAU;QAOV,0DAAW;QAAX,2EAAW;QAiD+B,0DAAqB;QAArB,kFAAqB;QAClD,0DAAsE;QAAtE,uKAAsE;QAGtC,0DAAqB;QAArB,kFAAqB;;6FD3DjE,mBAAmB;cAL/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAe,kBAAkB;IAepC;QAbA,SAAI,GAAa;YACjB,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,qCAAqC;SAC/C,CAAC;QACF,WAAM,GAAa;YACjB,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,mBAAmB;SAC7B,CAAC;IAIA,CAAC;CAKJ","file":"module-system-role-system-role-module-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemRoleService } from '../../service/system-role.service';\nimport { systemRole } from '../../interface/system-role';\nimport { systemRoleDataForm } from \"../../interface/system-role-data-form\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-system-role-update',\n  templateUrl: './system-role-update.component.html',\n  styles: []\n})\n\nexport class systemRoleUpdateComponent extends systemRoleDataForm implements OnInit {\n  form: FormGroup;\n  loading = true;\n  register = false;\n  @Input() modal = false;\n\n  @Input()\n  id: number;\n  data: systemRole;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemRoleService) {\n\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.minLength(1), Validators.maxLength(128)]],\n          active: [null, []]\n    });\n\n    if (typeof this.id !== \"undefined\") {\n      this.service.data(this.id).subscribe(data => this.initForm(data),\n          () => this.return);\n    } else {\n      this.activatedRoute.params.subscribe(params => {\n        this.id = params.id;\n        this.service.data(this.id).subscribe(data => this.initForm(data),\n            () => this.return);\n      });\n    }\n  }\n\n  initForm(data): void {\n    this.data = data;\n\n    this.form.controls.name.setValue(this.data.name);\n    this.form.controls.active.setValue(this.data.active);\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.update(values, this.id)\n        .subscribe(() => {\n          if (this.modal){\n            this.activeModal.close(this.id);\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error'\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n            });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemRole']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemRole\"\n                     [create]=\"false\" [id]=\"id\" (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n        <app-input-template [form]=\"form\" [data]=\"active\"></app-input-template>\n</app-create-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { systemRoleRoutingModule } from './system-role-routing.module';\nimport { systemRoleCreateComponent } from './components/create/system-role-create.component';\nimport { systemRoleReadComponent } from './components/read/system-role-read.component';\nimport { systemRoleUpdateComponent } from './components/update/system-role-update.component';\nimport { SharedModule } from '../../components/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PrivilegesComponent } from './components/privileges/privileges.component';\n\n@NgModule({\n  declarations: [\n    systemRoleCreateComponent,\n    systemRoleReadComponent,\n    systemRoleUpdateComponent,\n      PrivilegesComponent\n  ],\n  imports: [\n    CommonModule,\n    systemRoleRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class systemRoleModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { systemRoleCreateComponent } from './components/create/system-role-create.component';\nimport { systemRoleReadComponent } from './components/read/system-role-read.component';\nimport { systemRoleUpdateComponent } from './components/update/system-role-update.component';\nimport { GuardService } from '../../services/guard.service';\nimport { PrivilegesComponent } from './components/privileges/privileges.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: systemRoleReadComponent, canActivate: [ GuardService ], data: { privilege: 4 }\n  },\n  { path: 'create',\n    component: systemRoleCreateComponent, canActivate: [ GuardService ], data: { privilege: 1 }\n  },\n  { path: 'update/:id',\n    component: systemRoleUpdateComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: 'privileges/:id',\n    component: PrivilegesComponent, canActivate: [ GuardService ], data: { privilege: 3 }\n  },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class systemRoleRoutingModule { }\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { systemRoleService } from '../../service/system-role.service';\nimport { systemPrivilegesService } from '../../../system-privileges/service/system-privileges.service';\nimport { TableComponent } from '../../../../components/shared/table/table.component';\n\n@Component({\n  selector: 'app-system-role',\n  templateUrl: './system-role-read.component.html',\n  styleUrls: []\n})\nexport class systemRoleReadComponent implements OnInit {\n  disabled = true;\n  serveSource = 'systemRole';\n  serverFunction = 'readDataTable';\n  selected = [];\n  privilege = {\n    create: false,\n    update: false,\n    delete: false\n  };\n  params = {\n  };\n\n  fields = [\n    '#',\n    'Nombre',\n    'Activo',\n    'Privilegios'\n  ];\n\n  @ViewChild('table') table: TableComponent;\n\n  constructor(public auth: AuthService,\n              private router: Router,\n              private service: systemRoleService,\n              private privilegesService: systemPrivilegesService) {\n    this.privilegesService.getPrivileges('systemRole')\n      .subscribe(data => {\n        this.privilege = data;\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  update(id: number): void {\n    this.router.navigateByUrl('/systemRole/update/' + id);\n  }\n\n  delete(id: number): void {\n    Swal.fire({\n      title: `¿Estas seguro de eliminar el registro ${id}?`,\n      type: 'warning',\n      showCloseButton: true,\n      showCancelButton: true\n    }).then((result) => {\n      if (!result.dismiss) {\n        this.service.delete(id).subscribe(resp => {\n            Swal.fire('Eliminado', 'El registro se elimino correctamente!', 'error');\n            this.table.refreshTable();\n          },\n          error => {\n            Swal.fire(\n              'ERROR!',\n              'Hubo un error al eliminar, intente de nuevo',\n              'error'\n            );\n          });\n      }\n    });\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(ev): void {\n    let input = ev.target;\n    if (input.tagName !== 'A') {\n      input = input.parentNode;\n    }\n\n    const classTag = input.className;\n\n    if (classTag.includes('edit')) {\n      this.update(input.attributes.index.value);\n    }\n\n    if (classTag.includes('delete')) {\n      this.delete(input.attributes.index.value);\n    }\n\n    if (classTag.includes('privileges')) {\n      this.router.navigateByUrl('/systemRole/privileges/' + input.attributes.index.value).then();\n    }\n  }\n}\n","<section class=\"card animated fadeIn\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2 text-left\">\n        <button class=\"btn btn-success\" routerLink=\"create\" *ngIf=\"privilege.create\">\n          <span>\n            <i class=\"fa fa-plus\"></i> Agregar\n          </span>\n        </button>\n      </div>\n      <div class=\"col-md-6 text-left\">\n        <button class=\"btn btn-warning\" *ngIf=\"privilege.update\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-pencil\"></i> Editar\n          </span>\n        </button>\n        <button class=\"btn btn-danger\" *ngIf=\"privilege.delete\" [disabled]=\"selected.length == 0\">\n          <span>\n            <i class=\"fa fa-trash\"></i> Eliminar\n          </span>\n        </button>\n      </div>\n    </div>\n      <app-table #table\n                 [serveSource]=\"serveSource\"\n                 [serveFunction]=\"serverFunction\"\n                 [params]=\"params\"\n                 [fields]=\"fields\">\n    </app-table>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorsService } from '../../../../services/validators.service';\nimport { systemRoleDataForm } from \"../../interface/system-role-data-form\";\nimport { systemRoleService } from '../../service/system-role.service';\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-system-role-create',\n  templateUrl: './system-role-create.component.html',\n  styles: []\n})\n\nexport class systemRoleCreateComponent extends systemRoleDataForm implements OnInit {\n  form: FormGroup;\n  register = false;\n  loading = true;\n  @Input() modal = false;\n\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private validators: ValidatorsService,\n              private activeModal: NgbActiveModal,\n              private service: systemRoleService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.minLength(1), Validators.maxLength(128)]],\n      active: [null, []]\n    });\n\n    this.loading = false;\n  }\n\n  submit(values): void {\n    this.register = true;\n    if (this.form.valid) {\n      this.service.create(values)\n        .subscribe(resp => {\n          if (this.modal) {\n            let id = resp['@id'].split('/');\n            id = parseInt(id[id.length - 1]);\n            this.activeModal.close(id);\n            return;\n          }\n          this.return();\n          this.register = false;\n        }, error => {\n          Swal.fire({\n            title: 'Error',\n            type: 'error',\n            text: 'Ocurrió un error' + error.message\n          }).then(() => {\n            console.log(error);\n            this.register = false;\n          });\n        });\n    } else {\n      this.form.markAllAsTouched();\n      this.register = false;\n    }\n  }\n\n  return(): void {\n    if (this.modal){\n      this.activeModal.dismiss('cancel');\n      return;\n    }\n    this.router.navigate(['/systemRole']).then();\n  }\n}\n","<app-create-template [loading]=\"loading\" [register]=\"register\" [form]=\"form\" [modal]=\"modal\" title=\"systemRole\"\n                     (submit)=\"submit($event)\" (cancel)=\"return()\">\n  <app-input-template [form]=\"form\" [data]=\"name\"></app-input-template>\n      <app-input-template [form]=\"form\" [data]=\"active\"></app-input-template>\n</app-create-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, systemName } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class systemRoleService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    create(formData: {}): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.post(`${ API_URL }api/systemRole`, formData, { headers });\n    }\n\n    update(formData: {}, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.put(`${ API_URL }api/systemRole/${ id }`, formData, { headers });\n    }\n\n    delete(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.delete(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    data(id): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }`, { headers });\n    }\n\n    combo(): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/combo`, { headers });\n    }\n\n\n    privilegesRole(id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n        return this.http.get(`${ API_URL }api/systemRole/${ id }/privileges`, { headers });\n    }\n\n    setSystemRolePrivileges(formValue, id: number): Observable<any> {\n        const headers = new HttpHeaders({\n            Authorization: localStorage.getItem(systemName + 'Token')\n        });\n\n        return this.http.post(`${ API_URL }api/systemRole/${ id }/privileges`, { formValue }, { headers });\n    }\n}\n","import { expressionType } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { systemRoleService } from '../../service/system-role.service';\n\n@Component({\n    selector: 'app-privileges',\n    templateUrl: './privileges.component.html',\n    styleUrls: ['./privileges.component.scss']\n})\nexport class PrivilegesComponent implements OnInit {\n    form: FormGroup;\n    load = true;\n    register = false;\n\n    id: number;\n    rol = '';\n    data: any;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private router: Router,\n                private formBuilder: FormBuilder,\n                private service: systemRoleService) {\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe(params => {\n            this.id = params.id;\n            this.form = this.formBuilder.group({});\n\n            this.service.privilegesRole(this.id)\n                .subscribe(resp => {\n                    this.data = resp;\n                    this.rol = resp.name;\n\n                    this.initForm();\n\n                    this.load = false;\n\n                }, error => this.router.navigateByUrl('/systemRole'));\n        });\n    }\n\n    initForm(): void {\n        //console.log(this.data);\n        this.data.privilegesRole.forEach(item => {\n            console.log(item);\n            console.log(this.form);\n            this.form.addControl(\n                item.id + '-' + item.name,\n                this.formBuilder.array([])\n            );\n\n            item.privileges.forEach(privilege => {\n                console.log(item.id + '-' + item.name);\n                // @ts-ignore\n                this.form.get(item.id + '-' + item.name).controls.push(\n                    this.formBuilder.control(privilege, [])\n                );\n            });\n        });\n    }\n\n    submit(): void {\n        this.register = true;\n\n        const formValue = [];\n        Object.keys(this.form.controls).forEach(key => {\n            const control = this.form.get(key);\n            const privileges = [];\n            // @ts-ignore\n            for (const item of control.controls) {\n                privileges.push(item.value);\n            }\n\n            formValue.push({\n                form: key,\n                privileges\n            });\n        });\n\n        if (this.form.valid) {\n            this.service.setSystemRolePrivileges(formValue, this.id)\n                .subscribe(() => {\n                    this.router.navigateByUrl('/systemRole');\n                    this.register = false;\n                }, error => {\n                    this.register = false;\n                });\n        } else {\n            Object.values(this.form.controls).forEach(control => control.markAllAsTouched());\n            this.register = false;\n        }\n    }\n\n    allPrivilegesForm(target: EventTarget, formPrivilege: string): void {\n        const input = target as HTMLInputElement;\n\n        // @ts-ignore\n        const controls = this.form.get(formPrivilege).controls;\n        controls.forEach(control => {\n            control.patchValue(input.checked);\n        });\n    }\n\n\n    allPrivilegesPrivilege(target: EventTarget, i: number): void {\n        const input = target as HTMLInputElement;\n\n        for (const key of Object.keys(this.form.controls)) {\n            const control = this.form.get(key);\n            // @ts-ignore\n            control.controls[i].patchValue(input.checked);\n        }\n    }\n\n    allPrivileges(target: EventTarget): void {\n        const input = target as HTMLInputElement;\n        for (const key of Object.keys(this.form.controls)) {\n            const control = this.form.get(key);\n\n            // @ts-ignore\n            control.controls.forEach(item => {\n                item.patchValue(input.checked);\n            });\n        }\n    }\n}\n","<section class=\"card animated fadeIn\">\n  <form class=\"form-horizontal\" autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <header class=\"card-header\" *ngIf=\"!load\">\n      <div class=\"card-actions\">\n        <a href=\"#\" class=\"card-action card-action-toggle\" data-card-toggle=\"\"></a>\n      </div>\n      <h2 class=\"card-title\">Privilegios del rol: {{ rol }}</h2>\n    </header>\n\n    <div class=\"card-body\">\n      <div *ngIf=\"load\">\n        <div class=\"row text-center animated fadeIn fast\">\n          <div class=\"col\">\n            <i class=\"fa fa-spinner fa-5x fa-spin\"></i>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"!load\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Descripción</th>\n              <th>Ruta</th>\n              <th title=\"Selecciona todos los privilegios\">\n                <div class=\"text-center\">\n                  <label>Todos los<br>privilegios<br>\n                    <input type=\"checkbox\" (change)=\"allPrivileges($event.target)\">\n                  </label>\n                </div>\n              </th>\n              <th *ngFor=\"let privilege of data.privileges; let i = index\" title=\"{{ privilege.description }}\">\n                <div class=\"text-center\">\n                  <label>{{ privilege.name }}<br>\n                    <input type=\"checkbox\" (change)=\"allPrivilegesPrivilege($event.target, i)\">\n                  </label>\n                </div>\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let formPrivilege of data.privilegesRole\">\n              <td>{{ formPrivilege.name }}</td>\n              <td>{{ formPrivilege.description }}</td>\n              <td>{{ formPrivilege.href }}</td>\n              <td>\n                <div class=\"text-center\">\n                  <input type=\"checkbox\"\n                         (change)=\"allPrivilegesForm($event.target, formPrivilege.id + '-' + formPrivilege.name)\">\n                </div>\n              </td>\n              <td *ngFor=\"let privilegeForm of form.get(formPrivilege.id + '-' + formPrivilege.name).controls\">\n                <div class=\"text-center\">\n                  <input type=\"checkbox\" [formControl]=\"privilegeForm\">\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"row justify-content-center\">\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"register\">\n          <i class=\"fa \" [ngClass]=\"{ 'fa-save' : !register, 'fa-spinner fa-spin' : register }\"></i>\n          Guardar\n        </button>\n        <button type=\"reset\" class=\"btn btn-danger ml-2\" [disabled]=\"register\" routerLink=\"CelaRol\">\n          <i class=\"fa fa-window-close\"></i> Cancelar\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { DataForm } from '../../../interfaces/data-form';\n\nexport abstract class systemRoleDataForm {\n\n    name: DataForm = {\n    field: 'name',\n    type: 'text',\n    label: 'Name',\n    message: 'Ingrese minimo 1 letra y maximo 128'\n  };\n  active: DataForm = {\n    field: 'active',\n    type: 'number',\n    label: 'Active',\n    message: 'Ingrese un numero'\n  };\n\n    protected constructor() {\n        \n    }\n\n    abstract submit(values): void;\n\n    abstract return(): void;\n}\n"],"sourceRoot":"webpack:///"}